// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace BackOffice.Web.Controllers
{
    public partial class ProviderController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProviderController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProviderController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GIProviderUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIProviderUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GICompanyContactUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GICompanyContactUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GIPersonContactUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIPersonContactUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GIBranchUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIBranchUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GIDistributorUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIDistributorUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CIExperiencesUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CIExperiencesUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HICertificationsUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HICertificationsUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HIHealtyPoliticUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HIHealtyPoliticUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HIRiskPoliciesUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HIRiskPoliciesUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FIBalanceSheetUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIBalanceSheetUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FITaxUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FITaxUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FIIncomeStatementUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIIncomeStatementUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FIBankUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIBankUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FIOrganizationStructureUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIOrganizationStructureUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LIChaimberOfCommerceUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LIChaimberOfCommerceUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LIRutUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LIRutUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LICIFINUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LICIFINUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LISARLAFTUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LISARLAFTUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LIResolutionUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LIResolutionUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CPCustomerProviderStatus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CPCustomerProviderStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DownloadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProviderController Actions { get { return MVC.Provider; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Provider";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Provider";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GIProviderUpsert = "GIProviderUpsert";
            public readonly string GICompanyContactUpsert = "GICompanyContactUpsert";
            public readonly string GIPersonContactUpsert = "GIPersonContactUpsert";
            public readonly string GIBranchUpsert = "GIBranchUpsert";
            public readonly string GIDistributorUpsert = "GIDistributorUpsert";
            public readonly string CIExperiencesUpsert = "CIExperiencesUpsert";
            public readonly string HICertificationsUpsert = "HICertificationsUpsert";
            public readonly string HIHealtyPoliticUpsert = "HIHealtyPoliticUpsert";
            public readonly string HIRiskPoliciesUpsert = "HIRiskPoliciesUpsert";
            public readonly string FIBalanceSheetUpsert = "FIBalanceSheetUpsert";
            public readonly string FITaxUpsert = "FITaxUpsert";
            public readonly string FIIncomeStatementUpsert = "FIIncomeStatementUpsert";
            public readonly string FIBankUpsert = "FIBankUpsert";
            public readonly string FIOrganizationStructureUpsert = "FIOrganizationStructureUpsert";
            public readonly string LIChaimberOfCommerceUpsert = "LIChaimberOfCommerceUpsert";
            public readonly string LIRutUpsert = "LIRutUpsert";
            public readonly string LICIFINUpsert = "LICIFINUpsert";
            public readonly string LISARLAFTUpsert = "LISARLAFTUpsert";
            public readonly string LIResolutionUpsert = "LIResolutionUpsert";
            public readonly string CPCustomerProviderStatus = "CPCustomerProviderStatus";
            public readonly string DownloadFile = "DownloadFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GIProviderUpsert = "GIProviderUpsert";
            public const string GICompanyContactUpsert = "GICompanyContactUpsert";
            public const string GIPersonContactUpsert = "GIPersonContactUpsert";
            public const string GIBranchUpsert = "GIBranchUpsert";
            public const string GIDistributorUpsert = "GIDistributorUpsert";
            public const string CIExperiencesUpsert = "CIExperiencesUpsert";
            public const string HICertificationsUpsert = "HICertificationsUpsert";
            public const string HIHealtyPoliticUpsert = "HIHealtyPoliticUpsert";
            public const string HIRiskPoliciesUpsert = "HIRiskPoliciesUpsert";
            public const string FIBalanceSheetUpsert = "FIBalanceSheetUpsert";
            public const string FITaxUpsert = "FITaxUpsert";
            public const string FIIncomeStatementUpsert = "FIIncomeStatementUpsert";
            public const string FIBankUpsert = "FIBankUpsert";
            public const string FIOrganizationStructureUpsert = "FIOrganizationStructureUpsert";
            public const string LIChaimberOfCommerceUpsert = "LIChaimberOfCommerceUpsert";
            public const string LIRutUpsert = "LIRutUpsert";
            public const string LICIFINUpsert = "LICIFINUpsert";
            public const string LISARLAFTUpsert = "LISARLAFTUpsert";
            public const string LIResolutionUpsert = "LIResolutionUpsert";
            public const string CPCustomerProviderStatus = "CPCustomerProviderStatus";
            public const string DownloadFile = "DownloadFile";
        }


        static readonly ActionParamsClass_GIProviderUpsert s_params_GIProviderUpsert = new ActionParamsClass_GIProviderUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GIProviderUpsert GIProviderUpsertParams { get { return s_params_GIProviderUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GIProviderUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_GICompanyContactUpsert s_params_GICompanyContactUpsert = new ActionParamsClass_GICompanyContactUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GICompanyContactUpsert GICompanyContactUpsertParams { get { return s_params_GICompanyContactUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GICompanyContactUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_GIPersonContactUpsert s_params_GIPersonContactUpsert = new ActionParamsClass_GIPersonContactUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GIPersonContactUpsert GIPersonContactUpsertParams { get { return s_params_GIPersonContactUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GIPersonContactUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_GIBranchUpsert s_params_GIBranchUpsert = new ActionParamsClass_GIBranchUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GIBranchUpsert GIBranchUpsertParams { get { return s_params_GIBranchUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GIBranchUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_GIDistributorUpsert s_params_GIDistributorUpsert = new ActionParamsClass_GIDistributorUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GIDistributorUpsert GIDistributorUpsertParams { get { return s_params_GIDistributorUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GIDistributorUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_CIExperiencesUpsert s_params_CIExperiencesUpsert = new ActionParamsClass_CIExperiencesUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CIExperiencesUpsert CIExperiencesUpsertParams { get { return s_params_CIExperiencesUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CIExperiencesUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_HICertificationsUpsert s_params_HICertificationsUpsert = new ActionParamsClass_HICertificationsUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HICertificationsUpsert HICertificationsUpsertParams { get { return s_params_HICertificationsUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HICertificationsUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_HIHealtyPoliticUpsert s_params_HIHealtyPoliticUpsert = new ActionParamsClass_HIHealtyPoliticUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HIHealtyPoliticUpsert HIHealtyPoliticUpsertParams { get { return s_params_HIHealtyPoliticUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HIHealtyPoliticUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_HIRiskPoliciesUpsert s_params_HIRiskPoliciesUpsert = new ActionParamsClass_HIRiskPoliciesUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HIRiskPoliciesUpsert HIRiskPoliciesUpsertParams { get { return s_params_HIRiskPoliciesUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HIRiskPoliciesUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_FIBalanceSheetUpsert s_params_FIBalanceSheetUpsert = new ActionParamsClass_FIBalanceSheetUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FIBalanceSheetUpsert FIBalanceSheetUpsertParams { get { return s_params_FIBalanceSheetUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FIBalanceSheetUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_FITaxUpsert s_params_FITaxUpsert = new ActionParamsClass_FITaxUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FITaxUpsert FITaxUpsertParams { get { return s_params_FITaxUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FITaxUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_FIIncomeStatementUpsert s_params_FIIncomeStatementUpsert = new ActionParamsClass_FIIncomeStatementUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FIIncomeStatementUpsert FIIncomeStatementUpsertParams { get { return s_params_FIIncomeStatementUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FIIncomeStatementUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_FIBankUpsert s_params_FIBankUpsert = new ActionParamsClass_FIBankUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FIBankUpsert FIBankUpsertParams { get { return s_params_FIBankUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FIBankUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_FIOrganizationStructureUpsert s_params_FIOrganizationStructureUpsert = new ActionParamsClass_FIOrganizationStructureUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FIOrganizationStructureUpsert FIOrganizationStructureUpsertParams { get { return s_params_FIOrganizationStructureUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FIOrganizationStructureUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_LIChaimberOfCommerceUpsert s_params_LIChaimberOfCommerceUpsert = new ActionParamsClass_LIChaimberOfCommerceUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LIChaimberOfCommerceUpsert LIChaimberOfCommerceUpsertParams { get { return s_params_LIChaimberOfCommerceUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LIChaimberOfCommerceUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_LIRutUpsert s_params_LIRutUpsert = new ActionParamsClass_LIRutUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LIRutUpsert LIRutUpsertParams { get { return s_params_LIRutUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LIRutUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_LICIFINUpsert s_params_LICIFINUpsert = new ActionParamsClass_LICIFINUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LICIFINUpsert LICIFINUpsertParams { get { return s_params_LICIFINUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LICIFINUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_LISARLAFTUpsert s_params_LISARLAFTUpsert = new ActionParamsClass_LISARLAFTUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LISARLAFTUpsert LISARLAFTUpsertParams { get { return s_params_LISARLAFTUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LISARLAFTUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_LIResolutionUpsert s_params_LIResolutionUpsert = new ActionParamsClass_LIResolutionUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LIResolutionUpsert LIResolutionUpsertParams { get { return s_params_LIResolutionUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LIResolutionUpsert
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_CPCustomerProviderStatus s_params_CPCustomerProviderStatus = new ActionParamsClass_CPCustomerProviderStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CPCustomerProviderStatus CPCustomerProviderStatusParams { get { return s_params_CPCustomerProviderStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CPCustomerProviderStatus
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_DownloadFile s_params_DownloadFile = new ActionParamsClass_DownloadFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadFile DownloadFileParams { get { return s_params_DownloadFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadFile
        {
            public readonly string SearchParam = "SearchParam";
            public readonly string SearchFilter = "SearchFilter";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string CIExperiencesUpsert = "CIExperiencesUpsert";
                public readonly string CPCustomerProviderStatus = "CPCustomerProviderStatus";
                public readonly string FIBalanceSheetUpsert = "FIBalanceSheetUpsert";
                public readonly string FIBankUpsert = "FIBankUpsert";
                public readonly string FIIncomeStatementUpsert = "FIIncomeStatementUpsert";
                public readonly string FIOrganizationStructureUpsert = "FIOrganizationStructureUpsert";
                public readonly string FITaxUpsert = "FITaxUpsert";
                public readonly string GIBranchUpsert = "GIBranchUpsert";
                public readonly string GICompanyContactUpsert = "GICompanyContactUpsert";
                public readonly string GIDistributorUpsert = "GIDistributorUpsert";
                public readonly string GIPersonContactUpsert = "GIPersonContactUpsert";
                public readonly string GIProviderUpsert = "GIProviderUpsert";
                public readonly string HICertificationsUpsert = "HICertificationsUpsert";
                public readonly string HIHealtyPoliticUpsert = "HIHealtyPoliticUpsert";
                public readonly string HIRiskPoliciesUpsert = "HIRiskPoliciesUpsert";
                public readonly string Index = "Index";
                public readonly string LIChaimberOfCommerceUpsert = "LIChaimberOfCommerceUpsert";
                public readonly string LICIFINUpsert = "LICIFINUpsert";
                public readonly string LIResolutionUpsert = "LIResolutionUpsert";
                public readonly string LIRutUpsert = "LIRutUpsert";
                public readonly string LISARLAFTUpsert = "LISARLAFTUpsert";
            }
            public readonly string CIExperiencesUpsert = "~/Views/Provider/CIExperiencesUpsert.cshtml";
            public readonly string CPCustomerProviderStatus = "~/Views/Provider/CPCustomerProviderStatus.cshtml";
            public readonly string FIBalanceSheetUpsert = "~/Views/Provider/FIBalanceSheetUpsert.cshtml";
            public readonly string FIBankUpsert = "~/Views/Provider/FIBankUpsert.cshtml";
            public readonly string FIIncomeStatementUpsert = "~/Views/Provider/FIIncomeStatementUpsert.cshtml";
            public readonly string FIOrganizationStructureUpsert = "~/Views/Provider/FIOrganizationStructureUpsert.cshtml";
            public readonly string FITaxUpsert = "~/Views/Provider/FITaxUpsert.cshtml";
            public readonly string GIBranchUpsert = "~/Views/Provider/GIBranchUpsert.cshtml";
            public readonly string GICompanyContactUpsert = "~/Views/Provider/GICompanyContactUpsert.cshtml";
            public readonly string GIDistributorUpsert = "~/Views/Provider/GIDistributorUpsert.cshtml";
            public readonly string GIPersonContactUpsert = "~/Views/Provider/GIPersonContactUpsert.cshtml";
            public readonly string GIProviderUpsert = "~/Views/Provider/GIProviderUpsert.cshtml";
            public readonly string HICertificationsUpsert = "~/Views/Provider/HICertificationsUpsert.cshtml";
            public readonly string HIHealtyPoliticUpsert = "~/Views/Provider/HIHealtyPoliticUpsert.cshtml";
            public readonly string HIRiskPoliciesUpsert = "~/Views/Provider/HIRiskPoliciesUpsert.cshtml";
            public readonly string Index = "~/Views/Provider/Index.cshtml";
            public readonly string LIChaimberOfCommerceUpsert = "~/Views/Provider/LIChaimberOfCommerceUpsert.cshtml";
            public readonly string LICIFINUpsert = "~/Views/Provider/LICIFINUpsert.cshtml";
            public readonly string LIResolutionUpsert = "~/Views/Provider/LIResolutionUpsert.cshtml";
            public readonly string LIRutUpsert = "~/Views/Provider/LIRutUpsert.cshtml";
            public readonly string LISARLAFTUpsert = "~/Views/Provider/LISARLAFTUpsert.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ProviderController : BackOffice.Web.Controllers.ProviderController
    {
        public T4MVC_ProviderController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GIProviderUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GIProviderUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIProviderUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            GIProviderUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void GICompanyContactUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GICompanyContactUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GICompanyContactUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            GICompanyContactUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void GIPersonContactUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GIPersonContactUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIPersonContactUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            GIPersonContactUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void GIBranchUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GIBranchUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIBranchUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            GIBranchUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void GIDistributorUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GIDistributorUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GIDistributorUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            GIDistributorUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void CIExperiencesUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CIExperiencesUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CIExperiencesUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            CIExperiencesUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void HICertificationsUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult HICertificationsUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HICertificationsUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            HICertificationsUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void HIHealtyPoliticUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult HIHealtyPoliticUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HIHealtyPoliticUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            HIHealtyPoliticUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void HIRiskPoliciesUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult HIRiskPoliciesUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HIRiskPoliciesUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            HIRiskPoliciesUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void FIBalanceSheetUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult FIBalanceSheetUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIBalanceSheetUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            FIBalanceSheetUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void FITaxUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult FITaxUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FITaxUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            FITaxUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void FIIncomeStatementUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult FIIncomeStatementUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIIncomeStatementUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            FIIncomeStatementUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void FIBankUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult FIBankUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIBankUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            FIBankUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void FIOrganizationStructureUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult FIOrganizationStructureUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIOrganizationStructureUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            FIOrganizationStructureUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void LIChaimberOfCommerceUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult LIChaimberOfCommerceUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LIChaimberOfCommerceUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            LIChaimberOfCommerceUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void LIRutUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult LIRutUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LIRutUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            LIRutUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void LICIFINUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult LICIFINUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LICIFINUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            LICIFINUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void LISARLAFTUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult LISARLAFTUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LISARLAFTUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            LISARLAFTUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void LIResolutionUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult LIResolutionUpsert(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LIResolutionUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            LIResolutionUpsertOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void CPCustomerProviderStatusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CPCustomerProviderStatus(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CPCustomerProviderStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            CPCustomerProviderStatusOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void DownloadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string SearchParam, string SearchFilter);

        [NonAction]
        public override System.Web.Mvc.ActionResult DownloadFile(string SearchParam, string SearchFilter)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SearchParam", SearchParam);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SearchFilter", SearchFilter);
            DownloadFileOverride(callInfo, SearchParam, SearchFilter);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
