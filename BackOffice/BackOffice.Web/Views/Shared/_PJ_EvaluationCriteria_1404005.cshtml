@model Tuple<BackOffice.Models.Customer.CustomerViewModel, BackOffice.Models.Customer.EvaluationItemViewModel>

@{
    var UnitId = Model.Item2 != null &&
        Model.Item2.EC_UnitId != null ? Convert.ToInt32(Model.Item2.EC_UnitId.Trim()) : 0;
    var Unit = Model.Item2 != null &&
        Model.Item2.EC_Unit != null ? Model.Item2.EC_Unit.ToString() : string.Empty;

    var RatingId = Model.Item2 != null &&
    Model.Item2.EC_RatingId != null ? Convert.ToInt32(Model.Item2.EC_RatingId.Trim()) : 0;
    var Rating = Model.Item2 != null &&
        Model.Item2.EC_Rating != null ? Model.Item2.EC_Rating.ToString() : string.Empty;
        
    var EvaluationCriteriaId = Model.Item2 != null &&
        Model.Item2.EC_EvaluationCriteriaId != null ? Convert.ToInt32(Model.Item2.EC_EvaluationCriteriaId.Trim()) : 0;
    var EvaluationCriteria = Model != null &&
        Model.Item2.EC_EvaluationCriteria != null ? Model.Item2.EC_EvaluationCriteria.ToString() : string.Empty;

    var YearsQuantityId = Model.Item2 != null &&
        Model.Item2.EC_YearsQuantityId != null ? Convert.ToInt32(Model.Item2.EC_YearsQuantityId.Trim()) : 0;
    var YearsQuantity = Model.Item2 != null &&
        Model.Item2.EC_YearsQuantity != null ? Model.Item2.EC_YearsQuantityId.ToString() : string.Empty;

    var EvaluationValuesId = Model.Item2 != null &&
    Model.Item2.EC_InfoType_Value_OperatorId != null ? Convert.ToInt32(Model.Item2.EC_InfoType_Value_OperatorId.Trim()) : 0;
    var EvaluationValues = Model.Item2 != null &&
        Model.Item2.EC_InfoType_Value_Operator != null ? Model.Item2.EC_InfoType_Value_Operator.ToString() : string.Empty;
        
    var InfoType = string.Empty;
    var Value = string.Empty;
    var Operator = string.Empty;
    var Result = string.Empty;

    if (EvaluationValues != null &&
        EvaluationValues.Length > 0)
    {
        string[] values = EvaluationValues.Split('_');

        InfoType = values[0];
        Value = values[1];
        Operator = values[2];
        Result = values[3];
    }
        
    var OrderId = Model.Item2 != null &&
        Model.Item2.EC_OrderId != null ? Convert.ToInt32(Model.Item2.EC_OrderId.Trim()) : 0;
    var Order = Model.Item2 != null &&
        Model.Item2.EC_Order != null ? Model.Item2.EC_Order.ToString() : string.Empty;

    
}

<div>
    <label>Criterio de Evaluación de Balances.</label>
    <form id="frmEvaluationCriteria_1404005_Upsert" method="post" action="@(Url.Action
                (MVC.Customer.ActionNames.PCEvaluationCriteriaUpsert,
                MVC.Customer.Name,
                new {
                    CustomerPublicId = Model.Item1.RelatedCustomer.RelatedCompany.CompanyPublicId,
                    ProjectProviderId = Model.Item1.RelatedProjectConfig.RelatedProjectProvider.ItemId,
                    EvaluationItemId = Model.Item2.EvaluationItemId,
                }))">
        <ul>
            <li>
                <label>Unidad:</label>
                <select id="EC_UnitId" name="EC_Unit">
                    <option value="0">Seleccione una Opción</option>
                    @{
                        foreach (var item in Model.Item1.ProjectConfigOptions.Where(x => x.CatalogId == 1409))
                        {
                            if (Unit != null &&
                                Unit.Length > 0)
                            {
                                if (Unit == BackOffice.Models.General.enumEvaluationItemUnitType.None.ToString())
                                {
                                    <option value="@item.ItemId">@item.ItemName</option>
                                }
                                else if (item.ItemId == Convert.ToInt32(Unit))
                                {
                                    <option value="@item.ItemId" selected>@item.ItemName</option>
                                }
                            }
                            else
                            {
                                <option value="@item.ItemId">@item.ItemName</option>
                            }
                        }

                    }
                </select>
                <input type="hidden" name="EC_UnitId" value="@UnitId" />
            </li>
            <li>
                <label>Peso:</label>
                <input type="text" id="EC_RatingId" name="EC_Rating" value="@Rating" />
                <input type="hidden" name="EC_RatingId" value="@RatingId" />
            </li>
            <li>
                <label>Número de años a tener en cuenta:</label>
                <input type="text" id="EC_YearsQuantityId" name="EC_YearsQuantity" value="@YearsQuantity" />
                <input type="hidden" name="EC_YearsQuantityId" value="@YearsQuantityId" />
            </li>
            <li>
                <label>Orden</label>
                <input type="text" id="EC_OrderId" name="EC_Order" value="@Order" />
                <input type="hidden" name="EC_OrderId" value="@OrderId" />
            </li>
            <li>
                <label>Valores de Evaluación:</label>
                <input type="hidden" name="EC_EvaluationValuesId" value="@EvaluationValuesId" />
                <div>
                    <ul>
                        <li>
                            <label>Tipo de Información:</label>
                            <select id="EC_InfoTypeId" name="EC_InfoType">
                                <option value="0">Seleccione una Opción</option>
                                @{
                                    foreach (var item in Model.Item1.ProjectConfigOptions.Where(x => x.CatalogId == 702))
                                    {
                                        if (InfoType != null &&
                                            InfoType.Length > 0 &&
                                            item.ItemId == Convert.ToInt32(InfoType))
                                        {
                                            <option value="@item.ItemId" selected>@item.ItemName</option>
                                        }
                                        else
                                        {
                                            <option value="@item.ItemId">@item.ItemName</option>
                                        }
                                    }

                                }
                            </select>
                        </li>
                        <li>
                            <label>Valor:</label>
                            <input type="text" id="EC_Value" name="EC_Value" value="@Value" />
                            <input type="hidden" id="EC_Value_Id" name="EC_ValueId" value="" />
                        </li>
                        <li>
                            <label>Operador:</label>
                            <select id="EC_OperatorId" name="EC_Operator">
                                <option value="0">Seleccione una Opción</option>
                                @{
                                    foreach (var item in Model.Item1.ProjectConfigOptions.Where(x => x.CatalogId == 1403))
                                    {
                                        if (Operator != null &&
                                            Operator.Length > 0 &&
                                            item.ItemId == Convert.ToInt32(Operator))
                                        {
                                            <option value="@item.ItemId" selected>@item.ItemName</option>
                                        }
                                        else
                                        {
                                            <option value="@item.ItemId">@item.ItemName</option>
                                        }
                                    }

                                }
                            </select>
                        </li>
                        <li>
                            <label>Resultado:</label>
                            <input type="text" id="EC_ResultId" name="EC_Result" value="@Result" />

                        </li>
                    </ul>
                </div>
            </li>
        </ul>
        <div style="display:none">
            <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
            <input type="hidden" name="EvaluationCriteria_1404005" id="EvaluationCriteria_1404005" value="true" />
            <input type="hidden" name="StepAction" id="StepAction" value="" />
        </div>
    </form>
    <div class="POBOButtonsSaveProvider">
        <a class="POBOButtons" href="javascript:Provider_SubmitForm({FormId:'frmEvaluationCriteria_1404005_Upsert'})">Guardar</a>
    </div>
</div>