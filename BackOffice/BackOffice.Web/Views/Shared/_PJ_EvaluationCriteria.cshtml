@model BackOffice.Models.Customer.EvaluationItemViewModel

@if (!Model.RenderScripts)
{
    @(Html.Partial(MVC.Shared.Views._PJ_EvaluationCriteria_1404001.
                Replace("1404001", ((int)Model.EC_EvaluationCriteria).ToString()),
                    new BackOffice.Models.Customer.EvaluationItemViewModel
                        (new ProveedoresOnLine.Company.Models.Util.GenericItemModel()
                        {
                            ItemId = string.IsNullOrEmpty(Model.EvaluationItemId) ? 0 : Convert.ToInt32(Model.EvaluationItemId.Trim()),
                            ItemName = Model.EvaluationItemName,
                            ParentItem = new ProveedoresOnLine.Company.Models.Util.GenericItemModel()
                            {
                                ItemId = string.IsNullOrEmpty(Model.ParentEvaluationItem) ? 0 : Convert.ToInt32(Model.ParentEvaluationItem),
                            },
                            ItemType = new ProveedoresOnLine.Company.Models.Util.CatalogModel()
                            {
                                ItemId = string.IsNullOrEmpty(Model.EvaluationItemTypeId) ? 0 : Convert.ToInt32(Model.EvaluationItemTypeId),
                                ItemName = Model.EvaluationItemTypeName,
                            },
                            ItemInfo = new List<ProveedoresOnLine.Company.Models.Util.GenericItemInfoModel>()
                            {
                                new ProveedoresOnLine.Company.Models.Util.GenericItemInfoModel(){
                                    ItemInfoId = string.IsNullOrEmpty(Model.EC_ApprovePercentageId) ? 0 : Convert.ToInt32(Model.EC_ApprovePercentageId),
                                    Value = Model.EC_ApprovePercentage,
                                },
                                                                
                                new ProveedoresOnLine.Company.Models.Util.GenericItemInfoModel(){
                                    ItemInfoId = string.IsNullOrEmpty(Model.EC_EvaluationCriteriaId) ? 0 : Convert.ToInt32(Model.EC_EvaluationCriteriaId),
                                    Value = Model.EC_EvaluationCriteria.ToString(),
                                },
                                
                                new ProveedoresOnLine.Company.Models.Util.GenericItemInfoModel(){
                                    ItemInfoId = string.IsNullOrEmpty(Model.EC_EvaluatorId) ? 0 : Convert.ToInt32(Model.EC_EvaluatorId),
                                    Value = Model.EC_Evaluator,
                                },
                                
                                new ProveedoresOnLine.Company.Models.Util.GenericItemInfoModel(){
                                    ItemInfoId = string.IsNullOrEmpty(Model.EC_EvaluatorTypeId) ? 0 : Convert.ToInt32(Model.EC_EvaluatorTypeId),
                                    Value = Model.EC_EvaluatorTypeId,
                                },
                                
                                new ProveedoresOnLine.Company.Models.Util.GenericItemInfoModel(){
                                    ItemInfoId = string.IsNullOrEmpty(Model.EC_ExperienceConfigId) ? 0 : Convert.ToInt32(Model.EC_ExperienceConfigId),
                                    Value = Model.EC_ExperienceConfig,
                                },
                                
                                new ProveedoresOnLine.Company.Models.Util.GenericItemInfoModel(){
                                    ItemInfoId = string.IsNullOrEmpty(Model.EC_InfoType_Value_OperatorId) ? 0 : Convert.ToInt32(Model.EC_InfoType_Value_OperatorId),
                                    Value = Model.EC_InfoType_Value_Operator,
                                },
                            }
                        })))
} 