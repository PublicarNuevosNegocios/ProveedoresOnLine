@model BackOffice.Models.Provider.ProviderViewModel

@{
    ViewBag.Title = "Personas de contacto";
    Layout = MVC.Shared.Views._Layout;

    Model.RenderScripts = false;
}
@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)
    </div>
    <div class="POBOProviderContentWrapper">
        <div id="divGridPersonContact"></div>
    </div>
        @{
            Model.IsForm = false;
            Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
        }
</div>

@{
    Model.RenderScripts = true;
}

@section inlinescripts
{
    @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)

    @{
        //get ContactTypeValues
        string oCompanyContactTypeData = "[]";
        if (Model.ProviderOptions != null &&
            Model.ProviderOptions.Count > 0)
        {
            oCompanyContactTypeData = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                Serialize(Model.ProviderOptions.
                Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.CompanyContactType).
                ToList());
        }
    }

    <script type="text/javascript">
        var vCompanyContactTypeData = @(Html.Raw(oCompanyContactTypeData));
        $(document).ready(function () {
            Provider_CompanyContactObject.Init({
                ObjectId: 'divGridCompanyContact',
                ProviderPublicId: '@Model.RelatedProvider.RelatedCompany.CompanyPublicId',
                ContactType: '@((int)BackOffice.Models.General.enumContactType.CompanyContact)',
                CompanyContactTypeData: vCompanyContactTypeData,
            });

            Provider_CompanyContactObject.RenderAsync();

        });
    </script>
}
