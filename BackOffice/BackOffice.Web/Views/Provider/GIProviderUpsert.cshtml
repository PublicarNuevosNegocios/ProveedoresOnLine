@model BackOffice.Models.Provider.ProviderViewModel

@{
    ViewBag.Title = "Información de proveedor";
    Layout = MVC.Shared.Views._Layout;

    Model.RenderScripts = false;

    int CompanyInfoIdAux = 0;
    string CompanyInfoValueAux = string.Empty;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)
    </div>

    <div class="POBOProviderContentWrapper">

        <form class="POBOProviderUpsertForm" id="frmProviderUpsert"
              method="post"
              action="@(Url.Action
                (MVC.Provider.ActionNames.GIProviderUpsert,
                MVC.Provider.Name,
                new
                {
                    ProviderPublicId = Model.RelatedProvider != null && Model.RelatedProvider.RelatedCompany != null ? Model.RelatedProvider.RelatedCompany.CompanyPublicId : string.Empty,
                }))">
            <label class="POBOSectionTitles">Información básica</label>
            @{
                Model.IsForm = true;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
            <span class="POBOPCompulsoryFields">Campos obligatorios *</span>
            <ul>
                <li>
                    <label><span class="POBOPCompulsoryFields">*</span> Tipo de identificación</label>
                    <br />
                    <select name="IdentificationType">
                        @foreach (var Item in Model.ProviderOptions.Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.CompanyIdentificationType))
                        {
                            if (Model.RelatedProvider != null &&
                                Model.RelatedProvider.RelatedCompany != null &&
                                Model.RelatedProvider.RelatedCompany.IdentificationType != null &&
                                Model.RelatedProvider.RelatedCompany.IdentificationType.ItemId == Item.ItemId)
                            {
                                <option value="@Item.ItemId" selected="selected">@Item.ItemName</option>
                            }
                            else
                            {
                                <option value="@Item.ItemId">@Item.ItemName</option>
                            }
                        }
                    </select>
                </li>
                <li>
                    <label><span>*</span> Número de identificación</label>
                    <br />
                    <input type="text" name="IdentificationNumber" value="@(Model.RelatedProvider != null && Model.RelatedProvider.RelatedCompany != null ? Model.RelatedProvider.RelatedCompany.IdentificationNumber : string.Empty)" />
                </li>
                <li>
                    <label><span>*</span> Razón social</label>
                    <br />
                    <input type="text" name="CompanyName" value="@(Model.RelatedProvider != null && Model.RelatedProvider.RelatedCompany != null ? Model.RelatedProvider.RelatedCompany.CompanyName : string.Empty)" />
                </li>
                <li>
                    <label><span>*</span> Tipo de empresa</label>
                    <br />
                    <select name="CompanyType">
                        @foreach (var Item in Model.ProviderOptions.Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.CompanyType))
                        {
                            if (Model.RelatedProvider != null &&
                                Model.RelatedProvider.RelatedCompany != null &&
                                Model.RelatedProvider.RelatedCompany.CompanyType != null &&
                                Model.RelatedProvider.RelatedCompany.CompanyType.ItemId == Item.ItemId)
                            {
                                <option value="@Item.ItemId" selected="selected">@Item.ItemName</option>
                            }
                            else
                            {
                                <option value="@Item.ItemId">@Item.ItemName</option>
                            }
                        }
                    </select>
                </li>
                <li>
                    @{
                        //salesforce info

                        CompanyInfoIdAux = 0;
                        CompanyInfoValueAux = string.Empty;

                        if (Model.RelatedProvider != null &&
                            Model.RelatedProvider.RelatedCompany != null &&
                            Model.RelatedProvider.RelatedCompany.CompanyInfo != null)
                        {
                            CompanyInfoIdAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.SalesforceId).
                                Select(x => x.ItemInfoId).
                                DefaultIfEmpty(0).
                                FirstOrDefault();

                            CompanyInfoValueAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.SalesforceId).
                                Select(x => x.Value).
                                DefaultIfEmpty(string.Empty).
                                FirstOrDefault();
                        }
                    }
                    <label>Código de salesforce</label>
                    <br />
                    <input type="text" name="CompanyInfoType_@(((int)BackOffice.Models.General.enumCompanyInfoType.SalesforceId).ToString())_@CompanyInfoIdAux.ToString()" value="@CompanyInfoValueAux" />
                    @if (!string.IsNullOrEmpty(CompanyInfoValueAux))
                    {
                        <a class="POBOSmallCaption" target="_blank" href="@(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_Path_SalesForce].Value.TrimEnd('/') + "/" + CompanyInfoValueAux)"> Ver en salesforce</a>
                    }
                </li>
                <li>
                    @{
                        //status info

                        CompanyInfoIdAux = 0;
                        CompanyInfoValueAux = string.Empty;

                        if (Model.RelatedProvider != null &&
                            Model.RelatedProvider.RelatedCompany != null &&
                            Model.RelatedProvider.RelatedCompany.CompanyInfo != null)
                        {
                            CompanyInfoIdAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.ProviderStatus).
                                Select(x => x.ItemInfoId).
                                DefaultIfEmpty(0).
                                FirstOrDefault();

                            CompanyInfoValueAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.ProviderStatus).
                                Select(x => x.Value).
                                DefaultIfEmpty(string.Empty).
                                FirstOrDefault();
                        }
                    }
                    <label><span>*</span> Estado</label>
                    <select name="CompanyInfoType_@(((int)BackOffice.Models.General.enumCompanyInfoType.ProviderStatus).ToString())_@CompanyInfoIdAux.ToString()">
                        @foreach (var Item in Model.ProviderOptions.Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.ProviderStatus))
                        {
                            if (Model.RelatedProvider != null &&
                                Model.RelatedProvider.RelatedCompany != null &&
                                Model.RelatedProvider.RelatedCompany.CompanyType != null &&
                                !string.IsNullOrEmpty(CompanyInfoValueAux) &&
                                Item.ItemId.ToString() == CompanyInfoValueAux)
                            {
                                <option value="@Item.ItemId" selected>@Item.ItemName</option>
                            }
                            else
                            {
                                <option value="@Item.ItemId">@Item.ItemName</option>
                            }
                        }
                    </select>
                </li>
                <li>
                    @{
                        //payment info

                        CompanyInfoIdAux = 0;
                        CompanyInfoValueAux = string.Empty;

                        if (Model.RelatedProvider != null &&
                            Model.RelatedProvider.RelatedCompany != null &&
                            Model.RelatedProvider.RelatedCompany.CompanyInfo != null)
                        {
                            CompanyInfoIdAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.ProviderPaymentInfo).
                                Select(x => x.ItemInfoId).
                                DefaultIfEmpty(0).
                                FirstOrDefault();

                            CompanyInfoValueAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.ProviderPaymentInfo).
                                Select(x => x.Value).
                                DefaultIfEmpty(string.Empty).
                                FirstOrDefault();
                        }
                    }
                    <label><span>*</span> Información de Pago</label>
                    <select name="CompanyInfoType_@(((int)BackOffice.Models.General.enumCompanyInfoType.ProviderPaymentInfo).ToString())_@CompanyInfoIdAux.ToString()">
                        @foreach (var Item in Model.ProviderOptions.Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.ProviderPaymentInfo))
                        {
                            if (Model.RelatedProvider != null &&
                                Model.RelatedProvider.RelatedCompany != null &&
                                Model.RelatedProvider.RelatedCompany.CompanyType != null &&
                                !string.IsNullOrEmpty(CompanyInfoValueAux) &&
                                Item.ItemId.ToString() == CompanyInfoValueAux)
                            {
                                <option value="@Item.ItemId" selected>@Item.ItemName</option>
                            }
                            else
                            {
                                <option value="@Item.ItemId">@Item.ItemName</option>
                            }
                        }
                    </select>
                </li>
                <li>
                    @{
                        //certification date info

                        CompanyInfoIdAux = 0;
                        CompanyInfoValueAux = string.Empty;

                        if (Model.RelatedProvider != null &&
                            Model.RelatedProvider.RelatedCompany != null &&
                            Model.RelatedProvider.RelatedCompany.CompanyInfo != null)
                        {
                            CompanyInfoIdAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.CertificationDate).
                                Select(x => x.ItemInfoId).
                                DefaultIfEmpty(0).
                                FirstOrDefault();

                            CompanyInfoValueAux = Model.RelatedProvider.
                                RelatedCompany.
                                CompanyInfo.
                                Where(x => x.ItemInfoType.ItemId == (int)BackOffice.Models.General.enumCompanyInfoType.CertificationDate).
                                Select(x => x.Value).
                                DefaultIfEmpty(string.Empty).
                                FirstOrDefault();
                        }
                    }
                    <label>Fecha de certificación</label>
                    <br />
                    <input type="text" id="iptCertificationDate" name="CompanyInfoType_@(((int)BackOffice.Models.General.enumCompanyInfoType.CertificationDate).ToString())_@CompanyInfoIdAux.ToString()" value="@CompanyInfoValueAux" />
                </li>
                <li>
                    <label><span>*</span> Habilitado</label><br />
                    @if (Model.RelatedProvider != null &&
                        Model.RelatedProvider.RelatedCompany != null &&
                        !Model.RelatedProvider.RelatedCompany.Enable)
                    {
                        <input type="checkbox" name="Enable" />
                    }
                    else
                    {
                        <input type="checkbox" name="Enable" checked="checked" />
                    }
                </li>
            </ul>
            <div style="display:none">
                <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
                <input type="hidden" name="StepAction" id="StepAction" value="" />
            </div>
            <br />
            @{
                Model.IsForm = true;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
        </form>
    </div>
</div>
@{
    Model.RenderScripts = true;
}

@section inlinescripts
{
    @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)

    <script type="text/javascript">
        $(document).ready(function () {
            Provider_InitUpsertProvider({
                CertificationDateId: 'iptCertificationDate',
                DateFormat: '@(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_DateFormat_Kendo].Value)',
            });
        });
    </script>
}