@model BackOffice.Models.Provider.ProviderViewModel

@{
    ViewBag.Title = "HSEQ";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Model.RenderScripts = false;
    Model.GridToSave = "divGridCertification";
}
@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)
    </div>
    <div class="POBOProviderContentWrapper">
        <div id="POBOProviderUpsertForm">
            <label class="POBOSectionTitles">Certificaciones</label>
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
            <img id="divGridCompanyContact_kbtooltip" src="@Url.Content(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_InfoTooltip].Value)" title=" Nuevo (alt+shift+n) -  Guardar (alt+shift+g) - Descartar (alt+shift+d) " />
            <div id="divGridCertification"></div>
            <br />
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
        </div>
    </div>
</div>

<!--templates-->
<div style="display:none;">
    <div id="divGridCertification_ViewEnablesTemplate">
        <label>Ver solo los habilitados</label>
        <input id="divGridCertification_ViewEnable" type="checkbox" checked="checked" />
    </div>

    <div id="divGridCertification_NoFile">
        <div>
            <span>Seleccione un archivo</span>
        </div>
    </div>
    <div id="divGridCertification_File">
        <div>
            <a target="_blank" href="${C_CertificationFile}">Ver archivo</a>
        </div>
    </div>
</div>

@{
    Model.RenderScripts = true;
}

@section inlinescripts{

    @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model);

    @{

        //get CertificationTypeValues
        string oCertificationOptionList = "[]";
        if (Model.ProviderOptions != null &&
            Model.ProviderOptions.Count > 0)
        {
            Dictionary<int, List<ProveedoresOnLine.Company.Models.Util.CatalogModel>> oOptionCertification =
                Model.ProviderOptions.
                GroupBy(x => x.CatalogId).
                Select(x =>
                    new
                    {
                        okey = x.Key,
                        ovalue = Model.ProviderOptions.Where(y => y.CatalogId == x.Key).OrderBy(y => y.ItemName).ToList(),
                    }).ToDictionary(k => k.okey, v => v.ovalue);

            oCertificationOptionList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                Serialize(oOptionCertification.Select(x => new { Key = x.Key, Value = x.Value }));
        }
    }

    <script type="text/javascript">
        var vCertificationOptionList = @(Html.Raw(oCertificationOptionList));
        $(document).ready(function () {
            Provider_CompanyHSEQObject.Init({
                ObjectId: 'divGridCertification',
                ProviderPublicId: '@Model.RelatedProvider.RelatedCompany.CompanyPublicId',
                HSEQType: '@((int)BackOffice.Models.General.enumHSEQType.Certifications)',
                DateFormat: '@(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_DateFormat_Kendo].Value)',
                HSEQOptionList: vCertificationOptionList,
            });
            Provider_CompanyHSEQObject.RenderAsync();     
        
        });
    </script>
}

