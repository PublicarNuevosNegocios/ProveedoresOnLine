@model BackOffice.Models.Customer.CustomerViewModel

@{
    ViewBag.Title = "Comprador - Items de Evaluación.";
    Layout = MVC.Shared.Views._Layout;

    Model.RenderScripts = false;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._C_CustomerMenu, Model)
    </div>
    <div class="POBOProviderContentWrapper">
        <div id="POBOProviderUpsertForm">
            <label class="POBOSectionTitles">Items de Precalificaciones.</label>
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._C_CustomerActions, Model);
            }
            <div class="POBOEvaluationGoBackWrapper">
                <a href="@(Url.Action(
                MVC.Customer.ActionNames.PCProjectConfigUpsert,
                MVC.Customer.Name,
                new { CustomerPublicId = Model.RelatedCustomer.RelatedCompany.CompanyPublicId, }))">
                    <div></div>Regresar a la configuración.
                </a>
            </div>

            <div id="loading"></div>
            <label class="POBOSectionTitles">Area de Configuración</label>
            <div id="divGridEvaluationItem_@((int)BackOffice.Models.General.enumEvaluationItemType.EvaluationArea)"></div>
            <label class="POBOSectionTitles">Item de Configuración</label>
            <div id="divGridEvaluationItem_@((int)BackOffice.Models.General.enumEvaluationItemType.EvaluationCriteria)">
                <a>Agregar Criterio</a>
            </div>
            <br />
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._C_CustomerActions, Model);
            }
        </div>
    </div>
</div>

<!--templates-->
<div style="display:none;">
    <div id="divGridEvaluationItem_TitleTemplate">
        <label>${Title}</label>
    </div>

    <div id="divGridEvaluationItem_ShortcutToolTipTemplate">
        <img class="divGrid_kbtooltip" src="@Url.Content(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_InfoTooltip].Value)" title=" Nuevo (alt+shift+n) -  Guardar (alt+shift+g) - Descartar (alt+shift+d) " />
    </div>

    <div id="divGridEvaluationItem_ViewEnablesTemplate">
        <label class="POBOProviderGridVerSoloTrue">Ver solo los habilitados</label>
        <input class="POBOProviderGridEnableContact" id="divGridEvaluationItem_ViewEnable" type="checkbox" checked="checked" />
    </div>

    <div id="divGridEvaluationItem_SearchTemplate">
        <input class="POBOSurveySearchInput" id="divGridEvaluationItem_txtSearch" type="text" value="@Request["SearchParam"]" placeholder="Buscar Proceso de Selección" />
        <a class="POBOSearchEvaluations" href="javascript:Customer_ProjectConfig.Search();">Buscar</a>
    </div>
</div>

<div id="dialog" style="display:none;">
    <div id="divGridEvaluationItem_AddCriteria">
        <form id="divGridEvaluationItem_UpsertCriteria_Form" name="divGridEvaluationItem_UpsertCriteria_Form" method="post">
            <div>
                <a>Agregar Criterio de Evaluación</a>
                <select id="EvaluationCriteria">
                    @foreach (var item in Model.ProjectConfigOptions.Where(x => x.CatalogId == 1404))
                    {
                        <option id="@item.ItemId">@item.ItemName</option>
                    }
                </select>
                <button type="submit">Agregar</button>
                <button type="button">Cancelar</button>
            </div>
        </form>
    </div>

    <div id="divGridEvaluationItem_Dialog">
        <form id="divGridEvaluationItem_Upsert_Form" name="divGridEvaluationItem_Upsert_Form" method="post">
            <div>
                <label>Criterios de Evaluación</label>
                <div id="divGridEvaluationItem_EvaluationCriteriaForm">
                    @(Html.Partial(MVC.Shared.Views._PJ_EvaluationCriteria_1404001,Model.RelatedProjectConfig))
                </div>
                <button type="submit">Update</button>
                <button type="button">Cancelar</button>
            </div>
        </form>
    </div>
</div>

@{
    Model.RenderScripts = true;
}

@section inlinescripts{
    @Html.Partial(MVC.Shared.Views._C_CustomerMenu, Model)

    @{
        string oProjectConfigOptions = "[]";
        if (Model.ProjectConfigOptions != null &&
            Model.ProjectConfigOptions.Count > 0)
        {
            Dictionary<int, List<ProveedoresOnLine.Company.Models.Util.CatalogModel>> oOptionProjectConfig =
                Model.ProjectConfigOptions.
                GroupBy(x => x.CatalogId).
                Select(x =>
                    new
                    {
                        okey = x.Key,
                        ovalue = Model.ProjectConfigOptions.Where(y => y.CatalogId == x.Key).OrderBy(y => y.ItemName).ToList(),
                    }).ToDictionary(k => k.okey, v => v.ovalue);

            oProjectConfigOptions = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                Serialize(oOptionProjectConfig.Select(x => new { Key = x.Key, Value = x.Value }));
        }
    }

    <script type="text/javascript">
        $(document).ready(function () {
            var vProjectConfigOptionList = @(Html.Raw(oProjectConfigOptions));

            Customer_EvaluationItemObject.Init({
                ObjectId: 'divGridEvaluationItem',
                CustomerPublicId: '@Model.RelatedCustomer.RelatedCompany.CompanyPublicId',
                ProjectConfigId: '@Model.RelatedProjectConfig.ProjectProviderId',
                PageSize: '@BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_Grid_RowCountDefault].Value',
                ProjectConfigOptionsList: vProjectConfigOptionList,
            });
            Customer_EvaluationItemObject.RenderAsync({
                EvaluationItemType: '@(((int)BackOffice.Models.General.enumEvaluationItemType.EvaluationArea).ToString())',
                ParentEvaluationItem: '',
                Title: '@Model.RelatedProjectConfig.ProjectProviderName',
            });
        });
    </script>
}