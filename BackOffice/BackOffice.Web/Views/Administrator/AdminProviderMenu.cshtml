@model BackOffice.Models.Provider.ProviderViewModel

@{
    ViewBag.Title = "Administrar Opciones del Proveedor";
    Layout = MVC.Shared.Views._Layout;

    Model.RenderScripts = false;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)
    </div>
    <div class="POBOProviderContentWrapper">
        <div id="POBOProviderUpsertForm">
            <label class="POBOSectionTitles">Administración de la información del proveedor</label>
            <a href="@(Url.Action(
                MVC.Administrator.ActionNames.AdminModule,
                MVC.Administrator.Name,
                new { RoleCompanyId = Model.RelatedRole.RoleCompanyId }))">Regresar al listado de módulos</a>
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
            <div id="loading"></div>
            <label>Administración de menú del proveedor</label>
            <div id="divGridOption_@((int)BackOffice.Models.General.enumAdminRole.Option)"></div>
            <br />
            <label>Administración de sub-menú del proveedor</label>
            <div id="divGridOption_@((int)BackOffice.Models.General.enumAdminRole.OptionInfo)"></div>
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
        </div>
    </div>
</div>

<!--templates-->
<div style="display:none;">
    <!--template provider info menu-->
    <div id="divGridOption_ShortcutToolTipTemplate">
        <img class="divGrid_kbtooltip" src="@Url.Content(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_InfoTooltip].Value)" title=" Nuevo (alt+shift+n) -  Guardar (alt+shift+g) - Descartar (alt+shift+d) " />
    </div>

    <div id="divGridOption_@((int)BackOffice.Models.General.enumAdminRole.Option)_ViewEnablesTemplate">
        <label class="POBOProviderGridVerSoloTrue">Ver solo los habilitados</label>
        <input class="POBOProviderGridEnableContact" id="divGridOption_@((int)BackOffice.Models.General.enumAdminRole.Option)_ViewEnable" type="checkbox" checked="checked" />
    </div>

    <div id="divGridOption_@((int)BackOffice.Models.General.enumAdminRole.OptionInfo)_ViewEnablesTemplate">
        <label class="POBOProviderGridVerSoloTrue">Ver solo los habilitados</label>
        <input class="POBOProviderGridEnableContact" id="divGridOption_@((int)BackOffice.Models.General.enumAdminRole.OptionInfo)_ViewEnable" type="checkbox" checked="checked" />
    </div>
</div>

@{ 
    Model.RenderScripts = true;
}

@section inlinescripts{

    @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model);

    @{
        string oModuleOptionList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 805).ToList());

        string oGeneralInfoList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 807).ToList());

        string oLegalInfoList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 808).ToList());

        string oFinancialInfoList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 809).ToList());

        string oCommercialInfoList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 810).ToList());

        string oHSEQInfoList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 811).ToList());

        string oAditionallInfoList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 812).ToList());

        string oSurveyInfoList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.ProviderOptions.Where(x => x.CatalogId == 813).ToList());
    }

    <script type="text/javascript">
            $(document).ready(function () {
                Admin_CompanyRoleObject.Init({
                    ObjectId: 'divGridOption',
                    RoleModuleId: '@(Model.RelatedRole.RoleModule.FirstOrDefault().RoleModuleId)',
                    ModuleList: @Html.Raw(oModuleOptionList),
                    //Provider info menu items
                    GeneralInfoList: @Html.Raw(oGeneralInfoList),
                    LegalInfoList: @Html.Raw(oLegalInfoList),
                    FinancialInfoList: @Html.Raw(oFinancialInfoList),
                    CommercialInfoList: @Html.Raw(oCommercialInfoList),
                    HSEQInfoList: @Html.Raw(oHSEQInfoList),
                    AditionallInfoList: @Html.Raw(oAditionallInfoList),
                    SurveyInfoList: @Html.Raw(oSurveyInfoList),
                });
                Admin_CompanyRoleObject.RenderAsync({
                    ObjectType: '@((int)BackOffice.Models.General.enumAdminRole.Option)',
                });
            });
    </script>
}