@model BackOffice.Models.Provider.ProviderViewModel

@{
    ViewBag.Title = "Actividades Económicas Estandar";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Model.RenderScripts = false;
}
@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)
    </div>
    
    <div class="POBOProviderContentWrapper">
        <div id="POBOProviderUpsertForm">
            <label class="POBOSectionTitles">Administración de las Actividades Económicas</label>
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
            <img class="divGrid_kbtooltip" src="@Url.Content(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_InfoTooltip].Value)" title=" Nuevo (alt+shift+n) -  Guardar (alt+shift+g) - Descartar (alt+shift+d) " />
            <label class="POBOSectionTitles">@(Request["TreeName"])</label>  
            <div id="divGridEcoActInfo"></div>
            @{
                Model.IsForm = false;
                Html.RenderPartial(MVC.Shared.Views._P_ProviderActions, Model);
            }
        </div>
    </div>
</div>
<div id="TemplateId" style="display:none">

    <div id="divGridEcoActInfo_MultiAC_ItemTemplate">
        <div class="POBOProviderCompoundAutocomplete">
            <label><span>ProviderType:</span> ${ItemName}</label>
            <label><span>ProviderTypeId:</span> ${ItemId}</label>   
        </div>
    </div>

</div>


@{
    Model.RenderScripts = true;
}

@section inlinescripts{

    @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model);

    @{

        //ger CertificationTypeValues
        string oAdminEcoActivityInfoOptionList = "[]";
        if (Model.ProviderOptions != null &&
            Model.ProviderOptions.Count > 0)
        {
            Dictionary<int, List<ProveedoresOnLine.Company.Models.Util.CatalogModel>> oOptionAdminAcEco =
                Model.ProviderOptions.
                GroupBy(x => x.CatalogId).
                Select(x =>
                    new
                    {
                        okey = x.Key,
                        ovalue = Model.ProviderOptions.Where(y => y.CatalogId == x.Key).OrderBy(y => y.ItemName).ToList(),
                    }).ToDictionary(k => k.okey, v => v.ovalue);

            oAdminEcoActivityInfoOptionList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                Serialize(oOptionAdminAcEco.Select(x => new { Key = x.Key, Value = x.Value }));
        }
    }

    <script type="text/javascript">
    var vAdminEcoAclInfoOptionList = @(Html.Raw(oAdminEcoActivityInfoOptionList));
    var vTreeId = @(Request["TreeId"]);
        $(document).ready(function () {
            Admin_CategoryObject.Init({
                ObjectId: 'divGridEcoActInfo',
                UtilOptions: vAdminEcoAclInfoOptionList ,
                CategoryType: 'AdminEcoAcEstandar',
                TreeId: vTreeId,
                DateFormat: '@(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_DateFormat_Kendo].Value)',
            });
            Admin_CategoryObject.RenderAsync();
        });
    </script>
}

