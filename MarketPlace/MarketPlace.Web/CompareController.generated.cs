// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MarketPlace.Web.Controllers
{
    public partial class CompareController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CompareController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CompareController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CIExperiencesCompare()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CIExperiencesCompare);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HIHSECompare()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HIHSECompare);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FIBalanceSheetInfoCompare()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIBalanceSheetInfoCompare);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CompareController Actions { get { return MVC.Compare; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Compare";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Compare";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string CIExperiencesCompare = "CIExperiencesCompare";
            public readonly string HIHSECompare = "HIHSECompare";
            public readonly string FIBalanceSheetInfoCompare = "FIBalanceSheetInfoCompare";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string CIExperiencesCompare = "CIExperiencesCompare";
            public const string HIHSECompare = "HIHSECompare";
            public const string FIBalanceSheetInfoCompare = "FIBalanceSheetInfoCompare";
        }


        static readonly ActionParamsClass_CIExperiencesCompare s_params_CIExperiencesCompare = new ActionParamsClass_CIExperiencesCompare();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CIExperiencesCompare CIExperiencesCompareParams { get { return s_params_CIExperiencesCompare; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CIExperiencesCompare
        {
            public readonly string CompareId = "CompareId";
            public readonly string Currency = "Currency";
        }
        static readonly ActionParamsClass_HIHSECompare s_params_HIHSECompare = new ActionParamsClass_HIHSECompare();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HIHSECompare HIHSECompareParams { get { return s_params_HIHSECompare; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HIHSECompare
        {
            public readonly string CompareId = "CompareId";
            public readonly string Currency = "Currency";
        }
        static readonly ActionParamsClass_FIBalanceSheetInfoCompare s_params_FIBalanceSheetInfoCompare = new ActionParamsClass_FIBalanceSheetInfoCompare();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FIBalanceSheetInfoCompare FIBalanceSheetInfoCompareParams { get { return s_params_FIBalanceSheetInfoCompare; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FIBalanceSheetInfoCompare
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
            public readonly string ViewName = "ViewName";
            public readonly string Year = "Year";
            public readonly string Currency = "Currency";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CompareController : MarketPlace.Web.Controllers.CompareController
    {
        public T4MVC_CompareController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CIExperiencesCompareOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string CompareId, string Currency);

        [NonAction]
        public override System.Web.Mvc.ActionResult CIExperiencesCompare(string CompareId, string Currency)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CIExperiencesCompare);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "CompareId", CompareId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Currency", Currency);
            CIExperiencesCompareOverride(callInfo, CompareId, Currency);
            return callInfo;
        }

        [NonAction]
        partial void HIHSECompareOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string CompareId, string Currency);

        [NonAction]
        public override System.Web.Mvc.ActionResult HIHSECompare(string CompareId, string Currency)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HIHSECompare);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "CompareId", CompareId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Currency", Currency);
            HIHSECompareOverride(callInfo, CompareId, Currency);
            return callInfo;
        }

        [NonAction]
        partial void FIBalanceSheetInfoCompareOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId, string ViewName, string Year, string Currency);

        [NonAction]
        public override System.Web.Mvc.ActionResult FIBalanceSheetInfoCompare(string ProviderPublicId, string ViewName, string Year, string Currency)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FIBalanceSheetInfoCompare);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ViewName", ViewName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Year", Year);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Currency", Currency);
            FIBalanceSheetInfoCompareOverride(callInfo, ProviderPublicId, ViewName, Year, Currency);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
