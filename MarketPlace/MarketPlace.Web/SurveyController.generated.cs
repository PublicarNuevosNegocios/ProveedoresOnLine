// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MarketPlace.Web.Controllers
{
    public partial class SurveyController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SurveyController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SurveyController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SurveyUpsert()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SurveyUpsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SurveyFinalize()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SurveyFinalize);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SVSurveySearch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveySearch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SVSurveyDetail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SVSurveyEvaluatorDetail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyEvaluatorDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SVSurveyReport()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyReport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SVSurveyProgram()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyProgram);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SurveyController Actions { get { return MVC.Survey; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Survey";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Survey";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Search = "Search";
            public readonly string SurveyUpsert = "SurveyUpsert";
            public readonly string SurveyFinalize = "SurveyFinalize";
            public readonly string SVSurveySearch = "SVSurveySearch";
            public readonly string SVSurveyDetail = "SVSurveyDetail";
            public readonly string SVSurveyEvaluatorDetail = "SVSurveyEvaluatorDetail";
            public readonly string SVSurveyReport = "SVSurveyReport";
            public readonly string SVSurveyProgram = "SVSurveyProgram";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Search = "Search";
            public const string SurveyUpsert = "SurveyUpsert";
            public const string SurveyFinalize = "SurveyFinalize";
            public const string SVSurveySearch = "SVSurveySearch";
            public const string SVSurveyDetail = "SVSurveyDetail";
            public const string SVSurveyEvaluatorDetail = "SVSurveyEvaluatorDetail";
            public const string SVSurveyReport = "SVSurveyReport";
            public const string SVSurveyProgram = "SVSurveyProgram";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string SurveyPublicId = "SurveyPublicId";
            public readonly string StepId = "StepId";
        }
        static readonly ActionParamsClass_SurveyUpsert s_params_SurveyUpsert = new ActionParamsClass_SurveyUpsert();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SurveyUpsert SurveyUpsertParams { get { return s_params_SurveyUpsert; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SurveyUpsert
        {
            public readonly string SurveyPublicId = "SurveyPublicId";
            public readonly string StepId = "StepId";
        }
        static readonly ActionParamsClass_SurveyFinalize s_params_SurveyFinalize = new ActionParamsClass_SurveyFinalize();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SurveyFinalize SurveyFinalizeParams { get { return s_params_SurveyFinalize; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SurveyFinalize
        {
            public readonly string SurveyPublicId = "SurveyPublicId";
        }
        static readonly ActionParamsClass_SVSurveySearch s_params_SVSurveySearch = new ActionParamsClass_SVSurveySearch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SVSurveySearch SVSurveySearchParams { get { return s_params_SVSurveySearch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SVSurveySearch
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
            public readonly string SearchOrderType = "SearchOrderType";
            public readonly string OrderOrientation = "OrderOrientation";
            public readonly string PageNumber = "PageNumber";
            public readonly string InitDate = "InitDate";
            public readonly string EndDate = "EndDate";
        }
        static readonly ActionParamsClass_SVSurveyDetail s_params_SVSurveyDetail = new ActionParamsClass_SVSurveyDetail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SVSurveyDetail SVSurveyDetailParams { get { return s_params_SVSurveyDetail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SVSurveyDetail
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
            public readonly string SurveyPublicId = "SurveyPublicId";
        }
        static readonly ActionParamsClass_SVSurveyEvaluatorDetail s_params_SVSurveyEvaluatorDetail = new ActionParamsClass_SVSurveyEvaluatorDetail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SVSurveyEvaluatorDetail SVSurveyEvaluatorDetailParams { get { return s_params_SVSurveyEvaluatorDetail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SVSurveyEvaluatorDetail
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
            public readonly string SurveyPublicId = "SurveyPublicId";
            public readonly string User = "User";
        }
        static readonly ActionParamsClass_SVSurveyReport s_params_SVSurveyReport = new ActionParamsClass_SVSurveyReport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SVSurveyReport SVSurveyReportParams { get { return s_params_SVSurveyReport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SVSurveyReport
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
        }
        static readonly ActionParamsClass_SVSurveyProgram s_params_SVSurveyProgram = new ActionParamsClass_SVSurveyProgram();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SVSurveyProgram SVSurveyProgramParams { get { return s_params_SVSurveyProgram; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SVSurveyProgram
        {
            public readonly string ProviderPublicId = "ProviderPublicId";
            public readonly string SurveyPublicId = "SurveyPublicId";
            public readonly string ProjectPublicId = "ProjectPublicId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SurveyController : MarketPlace.Web.Controllers.SurveyController
    {
        public T4MVC_SurveyController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string SurveyPublicId, string StepId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(string SurveyPublicId, string StepId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SurveyPublicId", SurveyPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "StepId", StepId);
            IndexOverride(callInfo, SurveyPublicId, StepId);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            SearchOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SurveyUpsertOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string SurveyPublicId, string StepId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SurveyUpsert(string SurveyPublicId, string StepId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SurveyUpsert);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SurveyPublicId", SurveyPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "StepId", StepId);
            SurveyUpsertOverride(callInfo, SurveyPublicId, StepId);
            return callInfo;
        }

        [NonAction]
        partial void SurveyFinalizeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string SurveyPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SurveyFinalize(string SurveyPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SurveyFinalize);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SurveyPublicId", SurveyPublicId);
            SurveyFinalizeOverride(callInfo, SurveyPublicId);
            return callInfo;
        }

        [NonAction]
        partial void SVSurveySearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId, string SearchOrderType, string OrderOrientation, string PageNumber, string InitDate, string EndDate);

        [NonAction]
        public override System.Web.Mvc.ActionResult SVSurveySearch(string ProviderPublicId, string SearchOrderType, string OrderOrientation, string PageNumber, string InitDate, string EndDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveySearch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SearchOrderType", SearchOrderType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "OrderOrientation", OrderOrientation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PageNumber", PageNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InitDate", InitDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EndDate", EndDate);
            SVSurveySearchOverride(callInfo, ProviderPublicId, SearchOrderType, OrderOrientation, PageNumber, InitDate, EndDate);
            return callInfo;
        }

        [NonAction]
        partial void SVSurveyDetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId, string SurveyPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SVSurveyDetail(string ProviderPublicId, string SurveyPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyDetail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SurveyPublicId", SurveyPublicId);
            SVSurveyDetailOverride(callInfo, ProviderPublicId, SurveyPublicId);
            return callInfo;
        }

        [NonAction]
        partial void SVSurveyEvaluatorDetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId, string SurveyPublicId, string User);

        [NonAction]
        public override System.Web.Mvc.ActionResult SVSurveyEvaluatorDetail(string ProviderPublicId, string SurveyPublicId, string User)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyEvaluatorDetail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SurveyPublicId", SurveyPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "User", User);
            SVSurveyEvaluatorDetailOverride(callInfo, ProviderPublicId, SurveyPublicId, User);
            return callInfo;
        }

        [NonAction]
        partial void SVSurveyReportOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SVSurveyReport(string ProviderPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyReport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            SVSurveyReportOverride(callInfo, ProviderPublicId);
            return callInfo;
        }

        [NonAction]
        partial void SVSurveyProgramOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ProviderPublicId, string SurveyPublicId, string ProjectPublicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SVSurveyProgram(string ProviderPublicId, string SurveyPublicId, string ProjectPublicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SVSurveyProgram);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProviderPublicId", ProviderPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SurveyPublicId", SurveyPublicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProjectPublicId", ProjectPublicId);
            SVSurveyProgramOverride(callInfo, ProviderPublicId, SurveyPublicId, ProjectPublicId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
