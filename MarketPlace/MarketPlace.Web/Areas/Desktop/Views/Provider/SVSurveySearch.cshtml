@model MarketPlace.Models.Provider.ProviderViewModel
@{
    ViewBag.Title = "Proveedores OnLine - Evaluación de desempeño";
    Layout = MVC.Desktop.Shared.Views._Layout;

    Model.RenderScripts = false;
}
@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POMPProviderGreatWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POMPProviderSideMenuWrapper">
        @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
    </div>

    <div class="POMPProviderDataWrapper">
        <label class="POMPSectionTitles">Evaluación de desempeño</label>
        <div>
            <div class="POMPSearchResultsPager">
                <!--Pager-->
                @Html.Partial(MVC.Desktop.Shared.Views._SV_SurveySearch_Result_Pager, Model.RelatedSurveySearch)
            </div>
            <div class="POMPSearchResultsOrder">
                <!--Orders-->
                <ul>
                    <li>
                        <label>Ordenar por:</label>
                    </li>
                    <li>
                        <!--order-->
                        <select id="SurveySearch_Order">
                            @{string strOrderAux = ((int)MarketPlace.Models.General.enumSurveySearchOrderType.LastModify).ToString() + "_0";}
                            <option value="@strOrderAux" @(strOrderAux == Model.RelatedSurveySearch.OrderTypeOrientation ? "selected='selected'" : string.Empty)>Fecha de modificación - reciente antiguo</option>

                            @{strOrderAux = ((int)MarketPlace.Models.General.enumSurveySearchOrderType.LastModify).ToString() + "_1";}
                            <option value="@strOrderAux" @(strOrderAux == Model.RelatedSurveySearch.OrderTypeOrientation ? "selected='selected'" : string.Empty)>Fecha de modificación- antiguo reciente</option>

                            @{strOrderAux = ((int)MarketPlace.Models.General.enumSurveySearchOrderType.SurveyGroup).ToString() + "_1";}
                            <option value="@strOrderAux" @(strOrderAux == Model.RelatedSurveySearch.OrderTypeOrientation ? "selected='selected'" : string.Empty)>Grupo de evaluación - AZ</option>

                            @{strOrderAux = ((int)MarketPlace.Models.General.enumSurveySearchOrderType.SurveyGroup).ToString() + "_0";}
                            <option value="@strOrderAux" @(strOrderAux == Model.RelatedSurveySearch.OrderTypeOrientation ? "selected='selected'" : string.Empty)>Grupo de evaluación - ZA</option>

                            @{strOrderAux = ((int)MarketPlace.Models.General.enumSurveySearchOrderType.SurveyName).ToString() + "_1";}
                            <option value="@strOrderAux" @(strOrderAux == Model.RelatedSurveySearch.OrderTypeOrientation ? "selected='selected'" : string.Empty)>Nombre de evaluación - AZ</option>

                            @{strOrderAux = ((int)MarketPlace.Models.General.enumSurveySearchOrderType.SurveyName).ToString() + "_0";}
                            <option value="@strOrderAux" @(strOrderAux == Model.RelatedSurveySearch.OrderTypeOrientation ? "selected='selected'" : string.Empty)>Nombre de evaluación - ZA</option>

                            @{strOrderAux = ((int)MarketPlace.Models.General.enumSurveySearchOrderType.SurveyStatus).ToString() + "_0";}
                            <option value="@strOrderAux" @(strOrderAux == Model.RelatedSurveySearch.OrderTypeOrientation ? "selected='selected'" : string.Empty)>Estado</option>
                        </select>
                    </li>
                    <li>
                        <!--actions-->
                        <a href="javascript:Survey_ProgramObject.ShowProgram({ProviderPublicId:'@Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId',SurveyStatus:'@(((int)MarketPlace.Models.General.enumSurveyStatus.Program).ToString())'});">Programar nueva evaluación</a>
                    </li>
                </ul>
            </div>
            <div>
                <!--search results-->
                @if (Model.RelatedSurveySearch.SurveySearchResult != null && Model.RelatedSurveySearch.SurveySearchResult.Count > 0)
                {
                    <ul>
                        @foreach (MarketPlace.Models.Survey.SurveyViewModel ssit in Model.RelatedSurveySearch.SurveySearchResult)
                        {
                            <li>
                                <!--Survey Item-->
                                @Html.Partial(MVC.Desktop.Shared.Views._SV_SurveySearch_Result_Item, new Tuple<MarketPlace.Models.Provider.ProviderViewModel, MarketPlace.Models.Survey.SurveyViewModel>(Model, ssit))
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <a href="javascript:Survey_ProgramObject.ShowProgram({ProviderPublicId:'@Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId',SurveyStatus:'@(((int)MarketPlace.Models.General.enumSurveyStatus.Program).ToString())'});">
                        Este proveedor no tiene evaluaciones relacionadas, puede programar una evaluación haciendo click aquí.
                    </a>
                }
            </div>
            <div class="POMPSearchResultsPager">
                <!--Pager-->
                @Html.Partial(MVC.Desktop.Shared.Views._SV_SurveySearch_Result_Pager, Model.RelatedSurveySearch)
            </div>
        </div>
    </div>
</div>

<!--templates-->
<div style="display:none;">

    @Html.Partial(MVC.Desktop.Shared.Views._SV_ProgramSurvey, Model.RenderScripts)

</div>

@{
    Model.RenderScripts = true;
}
@section inlinescripts
{
    @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
    @Html.Partial(MVC.Desktop.Shared.Views._SV_ProgramSurvey, Model.RenderScripts)

    <script type="text/javascript">
        $(document).ready(function () {

            Provider_SurveySearchObject.Init({
                ObjectId: 'SurveySearch',
                SearchUrl: '@(Url.RouteUrl(MarketPlace.Models.General.Constants.C_Routes_Default,
                            new
                            {
                                controller = MVC.Provider.Name,
                                action = MVC.Provider.ActionNames.SVSurveySearch,
                                ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId
                            }))',
            });
            Provider_SurveySearchObject.RenderAsync();
        });
    </script>
}

