@model MarketPlace.Models.Provider.ProviderViewModel
@{
    ViewBag.Title = "Proveedores OnLine - Información Básica";
    Layout = MVC.Desktop.Shared.Views._Layout;

    Model.RenderScripts = false;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POMPProviderGreatWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POMPProviderSideMenuWrapper">
        @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
    </div>
    <div class="POMPProviderDataWrapper">
        <label class="POMPSectionTitles">Resumen del Proveedor</label>
        <label class="POMPProviderDataSubtitle">Información básica</label>
        <ul class="POMPProviderInfoDisplayList">
            @if (Model.RelatedGeneralInfo != null && Model.RelatedGeneralInfo.Count > 0)
            {
                <li>
                    <label>
                        Representante Legal

                        <span>@Model.RelatedGeneralInfo.Where(x => x.PC_RepresentantType == "Legal").Select(x => x.PC_ContactName).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>

                    </label>
                </li>
                <li>
                    <label>
                        Registro Mercantil
                        <span>@Model.RelatedLegalInfo.FirstOrDefault().CP_InscriptionNumber</span>
                    </label>
                </li>
                <li>
                    <label>
                        Dirección

                        <span>@Model.RelatedGeneralInfo.Where(x => x.BR_IsPrincipal == true).Select(x => x.BR_Address).FirstOrDefault()</span>

                    </label>
                </li>
                <li>
                    <label>
                        Ciudad

                        <span>@Model.RelatedGeneralInfo.Where(x => x.BR_IsPrincipal == true).Select(x => x.BR_City).FirstOrDefault()</span>

                    </label>
                </li>
                <li>
                    <label>
                        Teléfono

                        <span>@Model.RelatedGeneralInfo.Where(x => x.BR_IsPrincipal == true).Select(x => x.BR_Phone).FirstOrDefault()</span>

                    </label>
                </li>
                <li>
                    <label>
                        Fáx

                        <span>@Model.RelatedGeneralInfo.Where(x => x.BR_IsPrincipal == true).Select(x => x.BR_Fax).FirstOrDefault()</span>

                    </label>
                </li>
                <li>
                    <label>
                        Página Web

                        <span>@Model.RelatedGeneralInfo.Where(x => x.BR_IsPrincipal == true).Select(x => x.BR_Website).FirstOrDefault()</span>

                    </label>
                </li>

                <li>
                    <label>
                        Email

                        <span>@Model.RelatedGeneralInfo.Where(x => x.BR_IsPrincipal == true).Select(x => x.BR_Email).FirstOrDefault()</span>

                    </label>
                </li>
                <li>
                    <label>
                        Objeto Social

                        <span>@Model.RelatedLegalInfo.FirstOrDefault().CP_SocialObject</span>

                    </label>
                </li>
                <li>
                    <span>
                        <a href="@(Url.RouteUrl
                                (MarketPlace.Models.General.Constants.C_Routes_Default,
                                new
                                {
                                    controller = MVC.Provider.Name,
                                    action = MVC.Provider.ActionNames.GIBranchInfo,
                                    ProviderPublicId = Request["ProviderPublicId"]
                                }))">Ver Detalle</a>
                    </span>
                </li>
            }
        </ul>
        @if (Model.RelatedBlackListInfo != null)
        {
            <label class="POMPProviderDataSubtitle">Consulta Listas Restrictivas</label>
            <ul class="POMPProviderInfoDisplayList">

                @foreach (var itemBL in Model.RelatedBlackListInfo)
                {
                    <li>
                        <label>
                            @itemBL.ItemType.ItemName
                            <span>@itemBL.ItemName</span>
                        </label>
                    </li>
                }

            </ul>
        }
        <label class="POMPProviderDataSubtitle">Seguimientos</label>
        <ul class="POMPProviderInfoDisplayList">
            <li>
                <label>
                    Seguimiento
                    @if (Model.RelatedTrackingInfo != null)
                    {
                        <span>@Model.RelatedTrackingInfo.FirstOrDefault().ItemName</span>
                    }
                </label>
            </li>
            <li>
                <label>
                    Fecha
                    @if (Model.RelatedTrackingInfo != null)
                    {
                        <span>@Model.RelatedTrackingInfo.FirstOrDefault().CreateDate</span>
                    }
                </label>
            </li>
        </ul>

        <label class="POMPProviderDataSubtitle">Información Financiera Año @Model.RelatedFinancialBasicInfo.Where(x => x.BI_Year != null).Select(x => x.BI_Year).DefaultIfEmpty("").FirstOrDefault()</label>
        <ul class="POMPProviderInfoDisplayList">
            <li>
                <label>
                    Total Activo
                    @if (Model.RelatedFinancialBasicInfo != null)
                    {
                        <span>@Model.RelatedFinancialBasicInfo.Where(x => x.BI_TotalActive != null).Select(x => x.BI_TotalActive).DefaultIfEmpty("").FirstOrDefault()</span>
                    }
                </label>
            </li>
            <li>
                <label>
                    Total Pasivo
                    @if (Model.RelatedFinancialBasicInfo != null && !string.IsNullOrWhiteSpace(Model.RelatedFinancialBasicInfo.Where(x => x.BI_TotalPassive != null).Select(x => x.BI_TotalPassive).DefaultIfEmpty("").FirstOrDefault()))
                    {
                        <span>@Model.RelatedFinancialBasicInfo.Where(x => x.BI_TotalPassive != null).Select(x => x.BI_TotalPassive).DefaultIfEmpty("").FirstOrDefault()</span>
                    }
                </label>
            </li>
            <li>
                <label>
                    Total Patrimonio
                    @if (Model.RelatedFinancialBasicInfo != null && !string.IsNullOrWhiteSpace(Model.RelatedFinancialBasicInfo.Where(x => x.BI_TotalPatrimony != null).Select(x => x.BI_TotalPatrimony).DefaultIfEmpty("").FirstOrDefault()))
                    {
                        <span>@Model.RelatedFinancialBasicInfo.Where(x => x.BI_TotalPatrimony != null).Select(x => x.BI_TotalPatrimony).DefaultIfEmpty("").FirstOrDefault()</span>
                    }
                </label>
            </li>
            <li>
                <label>
                    Ingresos Operacionales
                    @if (Model.RelatedFinancialBasicInfo != null && !string.IsNullOrWhiteSpace(Model.RelatedFinancialBasicInfo.Where(x => x.BI_OperationIncome != null).Select(x => x.BI_OperationIncome).DefaultIfEmpty("").FirstOrDefault()))
                    {
                        <span>@Model.RelatedFinancialBasicInfo.Where(x => x.BI_OperationIncome != null).Select(x => x.BI_OperationIncome).DefaultIfEmpty("").FirstOrDefault()</span>
                    }
                </label>
            </li>
            <li>
                <label>
                    Utilidad Antes de Impuestos
                    @if (Model.RelatedFinancialBasicInfo != null && !string.IsNullOrWhiteSpace(Model.RelatedFinancialBasicInfo.Where(x => x.BI_IncomeBeforeTaxes != null).Select(x => x.BI_IncomeBeforeTaxes).DefaultIfEmpty("").FirstOrDefault()))
                    {
                        <span>@Model.RelatedFinancialBasicInfo.Where(x => x.BI_IncomeBeforeTaxes != null).Select(x => x.BI_IncomeBeforeTaxes).DefaultIfEmpty("").FirstOrDefault()</span>
                    }
                </label>
            </li>
            <li>
                <label>
                    Capital de Trabajo
                    <span>@Model.RelatedFinancialBasicInfo.Where(x => x.BI_JobCapital != null).Select(x => x.BI_JobCapital).DefaultIfEmpty(0).FirstOrDefault()</span>
                </label>
            </li>
            <li>
                <label>
                    Indice Altman
                    <span>@Model.RelatedFinancialBasicInfo.Where(x => x.BI_Altman != null).Select(x => x.BI_Altman).DefaultIfEmpty("").FirstOrDefault()</span>
                </label>
            </li>
            <li>
                <label>
                    <span>
                        * 1.80 Muy alta
                    </span>
                    <span>
                        * 1.81 a 2.7 Alta
                    </span>
                    <span>
                        * 2.8 a 2.9 Posible
                    </span>
                    <span>
                        * 3 o más No es probable la falta de liquidez
                    </span>
                </label>
            </li>
            <li>
                <span>
                    <a href="@(Url.RouteUrl
                                (MarketPlace.Models.General.Constants.C_Routes_Default,
                                new
                                {
                                    controller = MVC.Provider.Name,
                                    action = MVC.Provider.ActionNames.FIBalanceSheetInfo,
                                    ProviderPublicId = Request["ProviderPublicId"]
                                }))">Ver Detalle</a>
                </span>
            </li>
        </ul>

        <label class="POMPProviderDataSubtitle">Información HSEQ</label>
        <ul class="POMPProviderInfoDisplayList">

            @if (Model.RelatedHSEQlInfo != null && Model.RelatedHSEQlInfo.Count > 0)
            {
                <li>
                    <label>
                        LTIF
                        <span>@Model.RelatedHSEQlInfo.FirstOrDefault().CR_LTIFResult</span>
                    </label>
                </li>


                if (Model.RelatedCertificationBasicInfo != null && Model.RelatedCertificationBasicInfo.Count > 0)
                {
                    <li>
                        <label>
                            Certificado de gestión OHSAS 18001
                            @if (Model.RelatedCertificationBasicInfo.FirstOrDefault().LargeValue == "1" &&
                                Model.RelatedCertificationBasicInfo.FirstOrDefault().ItemInfoType.ItemId == 204)
                            {
                                <span>Si</span>
                            }
                            else
                            {
                                <span>No</span>
                            }
                        </label>
                    </li>

                    <li>
                        <label>
                            Certificado CCS
                            @if (!string.IsNullOrWhiteSpace(Model.RelatedCertificationBasicInfo.FirstOrDefault().Value))
                            {
                                <span>@Model.RelatedCertificationBasicInfo.FirstOrDefault().Value</span>
                            }
                        </label>
                    </li>

                    <li>
                        <label>
                            Certificados de gestión ISO
                            @if (Model.RelatedCertificationBasicInfo.FirstOrDefault().LargeValue == "1" &&
                                Model.RelatedCertificationBasicInfo.FirstOrDefault().ItemInfoType.ItemId == 170
                                || Model.RelatedCertificationBasicInfo.FirstOrDefault().LargeValue == "1" &&
                                Model.RelatedCertificationBasicInfo.FirstOrDefault().ItemInfoType.ItemId == 177)
                            {
                                <span>@Model.RelatedCertificationBasicInfo.FirstOrDefault().ItemInfoType.ItemName</span>
                            }
                            else
                            {
                                <span>No</span>
                            }
                        </label>
                    </li>

                    <li>
                        <label>
                            Nivel de Riesgo ARL
                            <span>@Model.RelatedHSEQlInfo.FirstOrDefault().CR_RateARL</span>
                        </label>
                    </li>
                }
                
                 <li>
                    <span>
                        <a href="@(Url.RouteUrl
                                (MarketPlace.Models.General.Constants.C_Routes_Default,
                                new
                                {
                                    controller = MVC.Provider.Name,
                                    action = MVC.Provider.ActionNames.HIRiskPoliciesInfo,
                                    ProviderPublicId = Request["ProviderPublicId"]
                                }))">Ver Detalle</a>
                    </span>
                </li>
            }
        </ul>
    </div>
</div>
@{
    Model.RenderScripts = true;
}
@section inlinescripts
{
    @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
}