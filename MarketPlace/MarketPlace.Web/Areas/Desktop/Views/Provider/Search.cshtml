@model MarketPlace.Models.Provider.ProviderSearchViewModel

@{
    ViewBag.Title = "Proveedores OnLine - Búsqueda de proveedores";
    Layout = MVC.Desktop.Shared.Views._Layout;

    Model.RenderScripts = false;
}

<div class="POMPProviderSearchBox">
    @*SearchBox*@
    <input class="POMPTextField" id="Search_txtSearchBox" type="text" value="@Model.SearchParam" onkeydown="if (event.keyCode == 13) javascript:Provider_SearchObject.Search()" />
    <a class="POMPButtons POMPSearchButtons" href="javascript:Provider_SearchObject.Search();">
        Encontrar
        <span class="POMPSearchButtonsLupita"></span>
    </a>
</div>
<div class="POMProviderSearchGreatWrapper">

    <div class="POMPProviderFilterMenuWrapper">
        @*SearchFilter*@
        @Html.Partial(MVC.Desktop.Shared.Views._P_Search_Filter, Model)
    </div>
    <div class="POMPProviderListWrapper">
        @*SearchResult*@
        @Html.Partial(MVC.Desktop.Shared.Views._P_Search_Result, Model)
    </div>
    <div class="POMPComparisonListWrapper">
        @*Comparison*@
        @Html.Partial(MVC.Desktop.Shared.Views._P_Search_Comparison, Model)
    </div>

</div>
@{
    Model.RenderScripts = true;
}

@section inlinescripts
{
    @Html.Partial(MVC.Desktop.Shared.Views._P_Search_Filter, Model)
    @Html.Partial(MVC.Desktop.Shared.Views._P_Search_Result, Model)
    @Html.Partial(MVC.Desktop.Shared.Views._P_Search_Comparison, Model)

    <script type="text/javascript">
        $(document).ready(function () {
            Provider_SearchObject.Init({
                ObjectId: 'Search',
                SearchUrl: '@(Url.RouteUrl(MarketPlace.Models.General.Constants.C_Routes_Default,
                            new
                            {
                                controller = MVC.Provider.Name,
                                action = MVC.Provider.ActionNames.Search
                            }))',
                CompareId: '@(Model.RelatedCompare != null ? Model.RelatedCompare.CompareId.ToString() : string.Empty)',
                CompareUrl: '@(Url.RouteUrl(MarketPlace.Models.General.Constants.C_Routes_Default,
                            new
                            {
                                controller = MVC.Compare.Name,
                                action = MVC.Compare.ActionNames.Index
                            }))',
                SearchParam: '@Model.SearchParam',
                SearchFilter: '@Model.SearchFilter',
                SearchOrderType: '@(((int)Model.SearchOrderType).ToString())',
                OrderOrientation: @Model.OrderOrientation.ToString().ToLower(),
                PageNumber: @Model.PageNumber,
                RowCount: @Model.RowCount,

                BlackListStatusShowAlert: @((int)MarketPlace.Models.General.enumBlackListStatus.ShowAlert),
            });

            Provider_SearchObject.RenderAsync();
        });
    </script>
}
