@model MarketPlace.Models.Provider.ProviderViewModel
@{
    ViewBag.Title = "Proveedores OnLine - Evaluación de desempeño";
    Layout = MVC.Desktop.Shared.Views._Layout;

    Model.RenderScripts = false;

    Tuple<int, int> MandatoryInfo = Model.RelatedSurvey.GetMandatoryAnsweredQuestions();

    MarketPlace.Models.Survey.SurveyProgramModel oSurveyModel = new MarketPlace.Models.Survey.SurveyProgramModel()
    {
        RenderScripts = false,
    };
}
@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POMPProviderGreatWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POMPProviderSideMenuWrapper">
        @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
    </div>

    <div class="POMPProviderDataWrapper">
        <label class="POMPSectionTitles">Detalle de evaluación de desempeño</label>
        <div class="POMPResultsOrder">
            <div class="POMPResultsBasicInfo">
                <!--evaluation basic info-->
                <div class="container-fluid">

                    <div class="row POMPSectionTitlesBox">
                        <div class="col-sm-8">
                            <a>
                                @((string.IsNullOrEmpty(Model.RelatedSurvey.SurveyConfigGroup) ? string.Empty : (Model.RelatedSurvey.SurveyConfigGroup + " - ")) + Model.RelatedSurvey.SurveyConfigName)
                            </a>
                        </div>
                        <div class="col-sm-4">
                            <div class="POMPDownloadReportsTop">
                                <form id="frmProviderUpsert"
                                      method="post"
                                      action="@(Url.Action
                                        (MVC.Provider.ActionNames.SVSurveyDetail,
                                        MVC.Provider.Name,
                                        new
                                        {
                                            ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
                                            SurveyPublicId = Model.RelatedSurvey.SurveyPublicId,
                                            User = Model.RelatedSurvey.SurveyResponsible,
                                        }))">
                                    <button class="POMPButtonDownloadReport_Provider" type="submit" title="Descargar Reporte">Descargar Reporte</button>
                                    <input type="hidden" name="DownloadReport" value="true" />
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-4">
                            <label>Calificación:</label>
                            @{
                                decimal rating = Convert.ToDecimal(Model.RelatedSurvey.SurveyRating);
                                rating = ((5 * rating) / 100);
                            }
                            <div class="rateit" data-rateit-value="@rating.ToString("0.##").Replace(",", ".")" data-rateit-ispreset="true" data-rateit-readonly="true"></div>
                            <span>(@Model.RelatedSurvey.SurveyRating.ToString("0.##").Replace(",", "."))</span>
                        </div>
                        <div class="col-xs-8">
                                <div class="selProgressBar" id="POMPbar3" data-value="@Model.RelatedSurvey.SurveyProgress"></div>
                                <!--<span>(@MandatoryInfo.Item2/@MandatoryInfo.Item1)</span>-->
                        </div>
                    </div>
                </div>
                <br />
                <div class="container-fluid">

                    <div class="row">
                        <div class="col-sm-4 col-lg-4"><label>Estado</label></div>
                        <div class="col-sm-4 col-lg-4"><label>Fecha de programación</label></div>
                        <div class="col-sm-4 col-lg-4"><label>Ultima actualización</label></div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4  col-lg-4">
                            <span>@Model.RelatedSurvey.SurveyStatusName</span>
                        </div>
                        <div class="col-sm-4  col-lg-4">
                            <span>@Model.RelatedSurvey.SurveyIssueDate</span>
                        </div>
                        <div class="col-sm-4  col-lg-4">
                            <span>@Model.RelatedSurvey.SurveyLastModify</span>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-4 col-lg-4"><label>Responsable</label></div>
                        <div class="col-sm-4 col-lg-4"><label>Proceso de Selección</label></div>

                    </div>
                    <div class="row">
                        <div class="col-sm-4  col-lg-4">
                            <span>@Model.RelatedSurvey.SurveyResponsible</span>
                        </div>
                        <div class="col-sm-4  col-lg-4">
                            <span>@Model.RelatedSurvey.SurveyRelatedProject</span>
                        </div>

                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-4 col-lg-4"><label>Evaluadores</label></div>
                    </div>
                    <div class="row">
                        @foreach (string EvaluatorUser in Model.RelatedSurvey.SurveyEvaluatorList.Distinct())
                        {
                            <div class="col-xs-4" id="POMPevalmails">
                                <a href="@(Url.RouteUrl(MarketPlace.Models.General.Constants.C_Routes_Default,
                                    new
                                    {
                                        controller = MVC.Provider.Name,
                                        action = MVC.Provider.ActionNames.SVSurveyEvaluatorDetail,
                                        ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
                                        SurveyPublicId = Model.RelatedSurvey.SurveyPublicId,
                                        User = EvaluatorUser
                                    }))">@EvaluatorUser</a>
                                </div>

                        }
                    </div>
                    <br />
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-xs-6 pull-right POMPbackeval" id="POMPacolor">
                    <a href="@(Url.Action(
                                                    MVC.Provider.ActionNames.SVSurveySearch,
                                                    MVC.Provider.Name,
                                                        new { ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId }))">
                        Regresar al listado de evaluaciones.
                    </a>
                </div>
            </div>
            <br />
        </div>
    </div>
</div>
    
<!--templates-->
<div style="display:none;">

    @Html.Partial(MVC.Desktop.Shared.Views._SV_ProgramSurvey, oSurveyModel)
</div>

@{
    Model.RenderScripts = true;
    oSurveyModel.RenderScripts = true;
}
@section inlinescripts
{
    @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
    @Html.Partial(MVC.Desktop.Shared.Views._SV_ProgramSurvey, oSurveyModel)

    <script type="text/javascript">
        $(document).ready(function () {
            //show generic progress bar
            ProgressBar_Generic_Show();
        });
    </script>
}
