@model MarketPlace.Models.Project.ProjectViewModel

@{
    ViewBag.Title = "Proveedores OnLine - Proceso de selección";
    Layout = MVC.Desktop.Shared.Views._Layout;

    MarketPlace.Models.Survey.SurveyProgramModel oSurveyModel = new MarketPlace.Models.Survey.SurveyProgramModel()
    {
        RenderScripts = false,
        CurrentProject = Model,
    };    
}
<div>
    <!--Header project-->
    <div>
        @Html.Partial(MVC.Desktop.Shared.Views._PJ_ProjectDetail_Header, Model)
    </div>
    <div class="POMPProjectBidDetailGreatWrapper">
        <div class="POMPProjectBidDetailMenu">
            <!--Provider Menu-->
            @Html.Partial(MVC.Desktop.Shared.Views._PJ_ProjectProviderDetail_Menu, Model)
        </div>
        <div class="POMPProjectBidDetailData">
            <!--Approval actions-->
            @Html.Partial(MVC.Desktop.Shared.Views._PJ_ProjectProviderDetail_Actions, Model)

            <div class="container-fluid">
                <div class="row text-right" id="POMPEvalTitleMargin">
                    <div class="col-xs-12">
                        <div class="col-xs-12">
                            <form action="@(Url.Action
                                        (MVC.Project.ActionNames.ProjectProviderDetail,
                                        MVC.Project.Name,
                                        new
                                        {
                                            ProjectPublicId = Model.ProjectPublicId,
                                            ProviderPublicId = Model.CurrentProjectProvider.RelatedProvider.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,

                                        }))" method="post">
                                <input type="hidden" name="DownloadReport" value="true" />
                                <button id="POMPButtonDownloadReportsTop" type="submit" title="Descargar Reporte">Descargar Reporte</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <!--Provider Results-->
            @Html.Partial(MVC.Desktop.Shared.Views._PJ_ProjectProviderDetail_Results, Model)            

            <!--Provider preview values-->
            @Html.Partial(MVC.Desktop.Shared.Views._PJ_ProjectProviderDetail_ResultsDetail, Model)
        </div>
    </div>
</div>

<div style="display:none;">
    <!--Survey-->
    @Html.Partial(MVC.Desktop.Shared.Views._SV_ProgramSurvey, oSurveyModel)
</div>

@{
    Model.RenderScripts = true;
    oSurveyModel.RenderScripts = true;
}

@section inlinescripts
{
    @Html.Partial(MVC.Desktop.Shared.Views._PJ_ProjectDetail_Header, Model)
    @Html.Partial(MVC.Desktop.Shared.Views._SV_ProgramSurvey, oSurveyModel)

    <script type="text/javascript">
        $(document).ready(function () {
            //init project detail object
            Project_ProjectDetailObject.Init({
                ObjectId: 'ProjectDetail',
                ProjectPublicId: '@Model.ProjectPublicId',
                CustomEconomicActivity: '@MarketPlace.Models.General.SessionModel.CurrentCompany_CustomEconomicActivity',
                ProjectRecalculateUrl: '@(Html.Raw(Url.RouteUrl(MarketPlace.Models.General.Constants.C_Routes_Default,
                            new
                            {
                                controller = MVC.Project.Name,
                                action = MVC.Project.ActionNames.ProjectDetailRecalculate,
                                ProjectPublicId = Model.ProjectPublicId,
                            })))',
                ProjectDetailUrl: '@(Html.Raw(Url.RouteUrl(MarketPlace.Models.General.Constants.C_Routes_Default,
                            new
                            {
                                controller = MVC.Project.Name,
                                action = MVC.Project.ActionNames.ProjectProviderDetail,
                                ProjectPublicId = Model.ProjectPublicId,
                                ProviderPublicId = Model.CurrentProjectProvider.RelatedProvider.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
                                EvaluationAreaId = Model.RelatedProjectConfig.CurrentEvaluationArea.EvaluationItemId,
                            })))',
            });

            Project_ProjectDetailObject.RenderAsync();

        });
    </script>
}

