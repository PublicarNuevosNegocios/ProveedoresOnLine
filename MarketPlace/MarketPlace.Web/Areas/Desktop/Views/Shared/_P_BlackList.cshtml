@model MarketPlace.Models.Provider.ProviderViewModel
@{
    ViewBag.Title = "Proveedores OnLine - Información Básica";
    Model.RenderScripts = false;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@



<label class="POMPSectionTitles">Listas Restrictivas</label>
<div class="container-fluid">

    @*AQUI ESTA EL AREA DE LISTAS RESTRICTIVAS*@
    @if (Model.RelatedBlackListInfo != null && Model.RelatedBlackListInfo.Count > 0)
    {
        var maxDate = (from d in Model.RelatedBlackListInfo select d.CreateDate).Max();

        if (Model.RelatedBlackListInfo != null && Model.RelatedLiteProvider.ProviderAlertRisk != MarketPlace.Models.General.enumBlackListStatus.DontShowAlert)
        {
            <div class="row POMPSectionTitlesBox">
                <div class="col-sm-6 col-lg-6 text-left">
                    <label>Consulta Listas Restrictivas - Última Validación @Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyInfo.Where(x => x.ItemInfoType.ItemId == 203012).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault() </label>
                </div>
                <div class="col-sm-6 col-lg-6 text-right">
                    <a class="POMPButtonDownloadReport_Provider btn" title="Generar Reporte" href="javascript:ReportViewerObj.RenderReportViewer({Options:['@MarketPlace.Models.General.enumCategoryInfoType.PDF.ToString()','@MarketPlace.Models.General.enumCategoryInfoType.Excel.ToString()'],ObjectId:'ThirdKnowledge',Tittle:'Reporte General'})">Generar Reporte</a>
                </div>
            </div>
            <div class="container-fluid POMPContainerDetail">
                @{
                    List<ProveedoresOnLine.CompanyProvider.Models.Provider.BlackListModel> ShowAlertModel = Model.RelatedBlackListInfo.Where(x => x.BlackListStatus.ItemId == 1101001).Select(x => x).ToList();
                    List<string> oGroupListName = new List<string>();
                    foreach (var alert in ShowAlertModel)
                    {
                        oGroupListName.Add(alert.BlackListInfo.Where(x => x.ItemInfoType.ItemName == "Nombre del Grupo").Select(x => x.Value).FirstOrDefault());
                    }
                    oGroupListName = oGroupListName.GroupBy(x => x).Select(x => x.First()).ToList();

                    /*get company info*/
                    List<string> oOrderGroup = new List<string>();

                    oOrderGroup.Add(oGroupListName.Where(x => x == "LISTAS RESTRICTIVAS - Criticidad Alta").Select(x => x).FirstOrDefault());
                    oOrderGroup.Add(oGroupListName.Where(x => x == "DELITOS E INHABILIDADES CONTRA EL ESTADO - Criticidad Media").Select(x => x).FirstOrDefault());
                    oOrderGroup.Add(oGroupListName.Where(x => x == "LISTAS FINANCIERAS - Criticidad Media").Select(x => x).FirstOrDefault());
                    oOrderGroup.Add(oGroupListName.Where(x => x == "LISTAS PEPS - Criticidad Baja").Select(x => x).FirstOrDefault());
                    oOrderGroup.Add(oGroupListName.Where(x => x == "SIN COINCIDENCIAS").Select(x => x).FirstOrDefault());

                    foreach (var grp in oOrderGroup)
                    {
                        List<ProveedoresOnLine.CompanyProvider.Models.Provider.BlackListModel> oInfoToPrint = new List<ProveedoresOnLine.CompanyProvider.Models.Provider.BlackListModel>();

                        oInfoToPrint = ShowAlertModel.Where(x => x.BlackListInfo.Any(a => a.Value == grp)).Select(x => x).ToList();
                        if (grp!=null)
                        {
                            <div class="row POMPSectionTitlesBox">
                                <div class="col-xs-10">
                                    <strong>@grp</strong>
                                </div>
                            </div>
                        }
                        <div class="POMPTKDetailContainer">
                            @foreach (var item in oInfoToPrint)
                            {
                                <br />
                                <div class="row">
                                    <div class="col-md-3">
                                        <strong>Prioridad</strong>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Estado</strong>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Nombre</strong>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Identificación</strong>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-3">
                                        <span>@item.BlackListInfo.Where(x => x.ItemInfoType.ItemName == "Prioridad").Select(x => x.Value).DefaultIfEmpty("N/D").FirstOrDefault()</span>
                                    </div>
                                    <div class="col-md-3">
                                        @{
                                string enable = item.BlackListInfo.Where(x => x.ItemInfoType.ItemName == "Estado").Select(x => x.Value).DefaultIfEmpty("N/D").FirstOrDefault().ToLower() == "true" ? "Activo" : "Inactivo";
                                        }
                                        <span>@enable</span>
                                    </div>
                                    <div class="col-md-3">
                                        <span>@item.BlackListInfo.Where(x => x.ItemInfoType.ItemName == "Nombre Consultado").Select(x => x.Value).DefaultIfEmpty("N/D").FirstOrDefault()</span>
                                    </div>
                                    <div class="col-md-3">
                                        <span>@item.BlackListInfo.Where(x => x.ItemInfoType.ItemName == "Identificacion Consultada").Select(x => x.Value).DefaultIfEmpty("N/D").FirstOrDefault()</span>
                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-md-9">
                                        <strong>Cargo</strong>
                                    </div>
                                    <div class="col-md-3">
                                        <strong></strong>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-9">
                                        <span>@item.BlackListInfo.Where(x => x.ItemInfoType.ItemName == "Cargo").Select(x => x.Value).DefaultIfEmpty("N/D").FirstOrDefault()</span>
                                    </div>
                                    <div class="col-md-3">
                                        <p>
                                            <a href="@(Url.RouteUrl
                                                                    (MarketPlace.Models.General.Constants.C_Routes_Default,
                                                                    new
                                                                    {
                                                                        controller = MVC.Provider.Name,
                                                                        action = MVC.Provider.ActionNames.GIBlackListDetail,
                                                                        ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
                                                                        BlackListId = item.BlackListId,
                                                                        ReturnUrl = Url.Action
                                                                                (MVC.Provider.ActionNames.GIBlackListDetail,
                                                                                MVC.Provider.Name,
                                                                                new
                                                                                {
                                                                                    ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
                                                                                    BlackListId = item.BlackListId,
                                                                                })
                                                                        }))">Ver Detalle</a>
                                        </p>
                                    </div>
                                </div>
                                <br />
                                <hr class="POMPProviderRestrictiveLIstSeparator" />
                            }
                        </div>
                    }
                }
            </div>
        }
        else
        {
            <div class="POMPEvalTitle" id="POMPEvalTitleMargin">
                <div class="col-xs-12">
                    <label>Consulta Listas Restrictivas - Última Validación @Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyInfo.Where(x => x.ItemInfoType.ItemId == 203012).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</label><p>No se encontraron coincidencias en listas restrictivas.</p>
                </div>
            </div>
        }

    }
</div>

@* Templates *@
<div id="ThirdKnowledge_Dialog">
    <form id="ThirdKnowledge_DialogForm" action="@(Url.Action (MVC.Provider.ActionNames.GIBlackList, MVC.Provider.Name, 
        new { ProviderPublicId = Request["ProviderPublicId"], }))" method="post">
    </form>
</div>

@{
    Model.RenderScripts = true;
}

@section inlinescripts
{


    @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
}