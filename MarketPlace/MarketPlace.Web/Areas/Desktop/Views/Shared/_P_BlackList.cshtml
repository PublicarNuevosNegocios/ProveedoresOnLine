@model MarketPlace.Models.Provider.ProviderViewModel
@{
    ViewBag.Title = "Proveedores OnLine - Información Básica";
    Model.RenderScripts = false;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@



<label class="POMPSectionTitles">Listas Restrictivas</label>
<div class="container-fluid">

    @*Validación de Modulos por Rol*@
    @foreach (var module in MarketPlace.Models.General.SessionModel.CurrentUserModules())
    {
        if (module == (int)MarketPlace.Models.General.enumMarketPlaceCustomerModules.ProviderDetail || module == (int)MarketPlace.Models.General.enumMarketPlaceCustomerModules.NewClient)
        {
            @*AQUI ESTA EL AREA DE LISTAS RESTRICTIVAS*@
            if (Model.RelatedBlackListInfo != null && Model.RelatedBlackListInfo.Count > 0)
            {
                var maxDate = (from d in Model.RelatedBlackListInfo select d.CreateDate).Max();

                if (Model.RelatedBlackListInfo != null && Model.RelatedLiteProvider.ProviderAlertRisk != MarketPlace.Models.General.enumBlackListStatus.DontShowAlert)
                {
                    <div class="row POMPSectionTitlesBox">
                        <div class="col-sm-6 col-lg-6 text-left">
                            <label>Consulta Listas Restrictivas - Última Validación @Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyInfo.Where(x => x.ItemInfoType.ItemId == 203012).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault() </label>
                        </div>
                        <div class="col-sm-6 col-lg-6 text-right">
                            <form id="frmThirdKnowledgeUpsert"
                                    method="post"
                                    action="@(Url.Action
                                                                    (MVC.Provider.ActionNames.GIBlackList,
                                                                    MVC.Provider.Name,
                                                                    new
                                                                    {
                                                                        ProviderPublicId = Request["ProviderPublicId"],
                                                                    }))">
                                <button class="POMPButtonDownloadReport_Provider" type="submit" title="Descargar Reporte">Descargar Reporte</button>
                                <input type="hidden" name="DownloadReport" value="true" />
                            </form>
                        </div>
                    </div>
                    <div class="container-fluid POMPContainerDetail">
                        @{
                            List<ProveedoresOnLine.CompanyProvider.Models.Provider.BlackListModel> ShowAlertModel = Model.RelatedBlackListInfo.Where(x => x.BlackListStatus.ItemId == 1101001).Select(x => x).ToList();
                            /*get company info*/
                            foreach (var item in ShowAlertModel)
                            {
                                foreach (var info in item.BlackListInfo)
                                {

                                    if (info.ItemInfoType.ItemName == "Razón Social")
                                    {
                                        <div class="row POMPSectionTitlesBox">
                                            <div class="col-xs-6">
                                                <strong>Razón Social/Nombre:</strong>&nbsp;<span>@info.Value</span>
                                            </div>
                                            <div class="col-xs-6 text-right ThirdKnowledge_Detail">
                                                <p class="POMPWarning">Se encontraron coincidencias en listas restrictivas.</p>
                                            </div>
                                        </div>
                                    }

                                    if (info.ItemInfoType.ItemName == "Nombre consultado")
                                    {
                                        <div class="POMPTKDetailContainer">

                                            <div class="row">


                                            </div>

                                        </div>

                                        <br />
                                        <hr class="POMPProviderRestrictiveLIstSeparator" />
                                        <div class="col-xs-4">
                                            <div class="col-xs-12">
                                                <label>
                                                    Razón Social/Nombre
                                                </label>
                                            </div>
                                            <div class="col-xs-12">
                                                <span>@info.Value</span>
                                            </div>
                                        </div>
                                    }

                                }
                            }
                         }
                            /*get related-company info*/

                    </div>
                }
                else
                {
                    <div class="POMPEvalTitle" id="POMPEvalTitleMargin">
                        <div class="col-xs-12">
                            <label>Consulta Listas Restrictivas - Última Validación @Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyInfo.Where(x => x.ItemInfoType.ItemId == 203012).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</label><p>No se encontraron coincidencias en listas restrictivas.</p>
                        </div>
                    </div>

                }
            }
        }
    }
</div>


@{
    Model.RenderScripts = true;
}

@section inlinescripts
{


    @Html.Partial(MVC.Desktop.Shared.Views._P_ProviderMenu, Model)
}