@model MarketPlace.Models.Provider.ProviderSearchViewModel

@{
    List<Tuple<string, string>> lstSearchFilter = Model.GetlstSearchFilter();

    string strCustomEconomicActivity = string.Empty;

    if (MarketPlace.Models.General.SessionModel.CurrentCompany != null &&
        MarketPlace.Models.General.SessionModel.CurrentCompany.CompanyInfo != null)
    {
        strCustomEconomicActivity = MarketPlace.Models.General.SessionModel.CurrentCompany.CompanyInfo.
            Where(x => x.ItemInfoType.ItemId == (int)MarketPlace.Models.General.enumCompanyInfoType.CustomEconomicActivity).
            Select(x => x.ValueName).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();
    }

    //new function
    List<int> oCurrentModule = MarketPlace.Models.General.SessionModel.CurrentUserModules();
    List<int> oCurrentMenu = MarketPlace.Models.General.SessionModel.CurrentProviderMenu();
    List<int> oCurrentSubMenu = MarketPlace.Models.General.SessionModel.CurrentProviderSubMenu((int)MarketPlace.Models.General.enumProviderMenu.GeneralInfo);
}

@if (!Model.RenderScripts)
{
    if (Model.ProviderFilterResult != null)
    {
        <span class="POMPSideBlockTitle">Filtrar Por:</span>
        <ul class="POMPFilterCategoryList">
            @*new funtion*@
            @if (oCurrentMenu.Any(x => x == (int)MarketPlace.Models.General.enumProviderMenu.GeneralInfo))
            {
                @*Economic activity*@
                @*if (Model.ProviderFilterResult.Any(x => x.FilterType.ItemId == (int)MarketPlace.Models.General.enumFilterType.EconomicActivity))
                {
                    <li>
                        <span>Maestra de Actividades</span>
                        <ul>
                            @foreach (var oFilterItem in Model.ProviderFilterResult.Where(x => x.FilterType.ItemId == (int)MarketPlace.Models.General.enumFilterType.EconomicActivity).OrderByDescending(x => x.Quantity).ToList())
                            {
                                <li>
                                    @if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ItemId.ToString() && x.Item2 == oFilterItem.FilterValue.ItemId.ToString()))
                                    {
                                        <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    }
                                    else
                                    {
                                        <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    }
                                    <span>@oFilterItem.FilterValue.ItemName (@oFilterItem.Quantity) </span>
                                </li>
                            }
                        </ul>
                    </li>
                }
                if (Model.ProviderFilterResult.Any(x => x.FilterType.ItemId == (int)MarketPlace.Models.General.enumFilterType.CustomEconomicActivity) &&
                    !string.IsNullOrEmpty(strCustomEconomicActivity))
                {
                    <li>
                        <span>@strCustomEconomicActivity</span>
                        <ul>
                            @foreach (var oFilterItem in Model.ProviderFilterResult.Where(x => x.FilterType.ItemId == (int)MarketPlace.Models.General.enumFilterType.CustomEconomicActivity).OrderByDescending(x => x.Quantity).ToList())
                            {
                                <li>
                                    @if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ItemId.ToString() && x.Item2 == oFilterItem.FilterValue.ItemId.ToString()))
                                    {
                                        <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    }
                                    else
                                    {
                                        <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    }
                                    <span>@oFilterItem.FilterValue.ItemName (@oFilterItem.Quantity) </span>
                                </li>
                            }
                        </ul>
                    </li>
                }*@

                if (Model.CountryAgg != null && Model.CountryAgg.Buckets.Count > 0)
                {
                    <li>
                        <span>Pais</span>
                        <ul>
                            @foreach (var oFilterItem in Model.CountryAgg.Buckets)
                            {
                                if (oFilterItem.Key != "0")
                                {
                                    <li>
                                        <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.Key + ";" + oFilterItem.Key)'}});" />
                                            @*<span>@oFilterItem.FilterValue.ItemName (@oFilterItem.Quantity) </span>*@
                                    </li>
                                }
                                <li>
                                    @*<input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem. + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    <span>@oFilterItem.FilterValue.ItemName (@oFilterItem.Quantity) </span>*@
                                </li>
                            }
                        </ul>
                    </li>
                }

                if (Model.CityAgg != null && Model.CityAgg.Buckets.Count > 0)
                {
                    <li>
                        <span>Ciudad</span>
                        <ul>
                            @foreach (var oFilterItem in Model.CityAgg.Buckets)
                            {
                                <li>
                                    @if (oFilterItem.Key != "0")
                                    {
                                        <input type="checkbox"  onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.Key + ";" + oFilterItem.Key)'}});" />
                                    }                                    
                                    <span>Bogotá (@oFilterItem.DocCount) </span>
                                </li>
                            }
                        </ul>
                    </li>
                }

                @*if (Model.ProviderFilterResult.Any(x => x.FilterType.ItemId == (int)MarketPlace.Models.General.enumFilterType.IsRelatedProvider))
                {
                    <li>
                        <span>Mis Proveedores</span>
                        <ul>
                            @foreach (var oFilterItem in Model.ProviderFilterResult.Where(x => x.FilterType.ItemId == (int)MarketPlace.Models.General.enumFilterType.IsRelatedProvider).OrderByDescending(x => x.Quantity).ToList())
                            {
                                <li>
                                    @if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ItemId.ToString() && x.Item2 == oFilterItem.FilterValue.ItemId.ToString()))
                                    {
                                        <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    }
                                    else
                                    {
                                        <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    }
                                    <span>@oFilterItem.FilterValue.ItemName (@oFilterItem.Quantity) </span>
                                </li>
                                break;
                            }
                        </ul>
                    </li>
                }*@

                if (Model.BlackListAgg != null && Model.BlackListAgg.Buckets.Count > 0)
                {
                    <li>
                        <span>Proveedores en Listas Restrictivas</span>
                        <ul>
                            @foreach (var oFilterItem in Model.BlackListAgg.Buckets)
                            {
                                <li>
                                   @if (oFilterItem.Key != "0")
                                   {
                                    <input type="checkbox"  onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.Key + ";" + oFilterItem.Key)'}});" />
                                   }
                                    @*else
                                    {
                                        <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                    }*@
                                    <span>Proveedores En Listas Restrictivas (@oFilterItem.DocCount) </span>
                                </li>                                    
                            }
                        </ul>
                    </li>
                }

                if (Model.StatusAgg != null && Model.StatusAgg.Buckets.Count > 0)
                {
                    <li>
                        <span>Estado</span>
                        <ul>
                            @foreach (var oFilterItem in Model.BlackListAgg.Buckets)
                            {
                                <li>
                                    @if (oFilterItem.Key != "0")
                                    {
                                        <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.Key + ";" + oFilterItem.Key)'}});" />
                                    }
                                    @*else
                                        {
                                            <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType.ItemId + ";" + oFilterItem.FilterValue.ItemId)'}});" />
                                        }*@
                                    <span>Estado (@oFilterItem.DocCount) </span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }            

            
        </ul>
    }
    else
    {
        <div>Esta Búsqueda No Tiene Filtros</div>
    }
}
