@model MarketPlace.Models.Provider.ProviderViewModel

@if (!Model.RenderScripts && Model.RelatedSurvey != null)
{
    string strUrlDetail = Url.RouteUrl
        (MarketPlace.Models.General.Constants.C_Routes_Default,
        new
        {
            controller = MVC.Provider.Name,
            action = MVC.Provider.ActionNames.SVSurveyDetail,
            ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
            SurveyPublicId = Model.RelatedSurvey.SurveyPublicId
        });
    string strUrlEdit = Url.RouteUrl
        (MarketPlace.Models.General.Constants.C_Routes_Default,
        new
        {
            controller = MVC.Provider.Name,
            action = MVC.Provider.ActionNames.SVSurveyProgram,
            ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
            SurveyPublicId = Model.RelatedSurvey.SurveyPublicId
        });

    string strjsUpdateObject = string.Empty;
    if (Model.RelatedSurvey.SurveyStatus == MarketPlace.Models.General.enumSurveyStatus.Program)
    {
        strjsUpdateObject = (new System.Web.Script.Serialization.JavaScriptSerializer()).
            Serialize(new
            {
                SurveyStatus = (int)Model.RelatedSurvey.SurveyStatus,

                SurveyPublicId = Model.RelatedSurvey.SurveyPublicId,
                ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,

                SurveyConfigId = Model.RelatedSurvey.SurveyConfigId,
                SurveyConfigName = Model.RelatedSurvey.SurveyConfigName,

                SurveyEvaluator = Model.RelatedSurvey.SurveyEvaluator,
                SurveyEvaluatorId = Model.RelatedSurvey.SurveyEvaluatorId,

                SurveyIssueDate = Model.RelatedSurvey.SurveyIssueDate,
                SurveyIssueDateId = Model.RelatedSurvey.SurveyIssueDateId,

                SurveyExpirationDateId = Model.RelatedSurvey.SurveyExpirationDateId,
                SurveyExpirationDate = Model.RelatedSurvey.SurveyExpirationDate,

                SurveyRelatedProject = Model.RelatedSurvey.SurveyRelatedProject,
                SurveyRelatedProjectId = Model.RelatedSurvey.SurveyRelatedProjectId,

            });

    }
    <!--evaluation basic info-->
    <div class="POMPContainerDetail POMPSurveyContainerPosition">

        <div class="POMPSectionTitlesBox">
            <div class="col-sm-10 col-lg-10">
                <strong>@((string.IsNullOrEmpty(Model.RelatedSurvey.SurveyConfigGroup) ? string.Empty : (Model.RelatedSurvey.SurveyConfigGroup + " - ")) + Model.RelatedSurvey.SurveyConfigName)</strong>
            </div>
            <div class="col-sm-2 col-lg-2 text-right">
                <a href=" @strUrlDetail ">
                    Ver Detalle
                </a>
            </div>
        </div>
        <br />
        <div class="container-fluid POMPProviderDetailContainer">
            <div class="row">
                <div class="col-sm-4 POMPProviderBoxInfo">
                    <label>Calificación:</label>

                    @{
                        decimal rating = Convert.ToDecimal(Model.RelatedSurvey.SurveyRating);
                        rating = ((5 * rating) / 100);
                    }
                    <div class="rateit" data-rateit-value="@rating.ToString("0.##").Replace(",", ".")" data-rateit-ispreset="true" data-rateit-readonly="true"></div>
                    <span>(@Model.RelatedSurvey.SurveyRating.ToString("0.##").Replace(",", "."))</span>
                </div>
                <div class="col-sm-7 POMPProviderBoxInfo">
                    <div class="selProgressBar" id="POMPbar1" data-value="@Model.RelatedSurvey.SurveyProgress"><span class="k-progress-status-wrap"><span class="k-progress-status">0%</span></span></div>
                    @{
                        for (int i = 0; i < Model.RelatedSurvey.SurveyEvaluatorList.Count; i++)
                        {
                            <input type="hidden" name="Survey_ProgramSurvey_Evaluator_@Model.RelatedSurvey.SurveyEvaluatorIdList[i]" value="@Model.RelatedSurvey.SurveyEvaluatorIdList[i]" />

                        }
                    }
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-sm-4"><strong>Responsable</strong></div>
                <div class="col-sm-4"><strong>Ultima actualización</strong></div>
                <div class="col-sm-4"><strong>Estado</strong></div>

            </div>
            <div class="row">
                <div class="col-sm-4">
                    <span>@Model.RelatedSurvey.SurveyResponsible</span>
                </div>
                <div class="col-sm-4">
                    <span>@Model.RelatedSurvey.SurveyLastModify</span>
                </div>
                <div class="col-sm-4">
                    <span>@Model.RelatedSurvey.SurveyStatusName</span>
                </div>
            </div>
            <br />
            <!--evaluation actions-->
            <div class="POMPResultsActions">
                <div class="col-xs-12">
                    @*@if (Model.RelatedSurvey.SurveyStatus == MarketPlace.Models.General.enumSurveyStatus.Program &&
                            Model.RelatedSurvey.SurveyResponsible.Replace(" ", "").ToLower() ==
                            MarketPlace.Models.General.SessionModel.CurrentLoginUser.Email.Replace(" ", "").ToLower())
                        {

                            <a class="POMPEvaluationListActions" href="@strUrlEdit"> TODO: Hacer el Editar
                                    Editar
                                </a>

                        }*@
                    @if (Model.RelatedSurvey.SurveyStatus != MarketPlace.Models.General.enumSurveyStatus.Close &&Model.RelatedSurvey.SurveyEvaluatorList.Contains(MarketPlace.Models.General.SessionModel.CurrentLoginUser.Email))
                    {
                        <div class="col-xs-3 pull-right" id="POMPanswereval">
                            <a class="POMPEvaluationListActions" href="@(Url.RouteUrl
                                        (MarketPlace.Models.General.Constants.C_Routes_Default,
                                        new
                                        {
                                            controller =MVC.Survey.Name,
                                            action =MVC.Survey.ActionNames.Index,
                                            SurveyPublicId = Model.RelatedSurvey.SurveyPublicId
                                        }))" target="_blank">Responder evaluación</a>
                        </div>
                    }



                    <div class="col-xs-2 pull-right" id="POMPviewdetail">
                        @if (MarketPlace.Models.General.SessionModel.CurrentCompany.RelatedUser.FirstOrDefault().RelatedRole.ParentItem == null)
                        {
                            <a class="POMPEvaluationListActions" href="@strUrlDetail">Ver detalle</a>
                        }
                        else
                        {
                            <a class="POMPEvaluationListActions" href="@(Url.RouteUrl(MarketPlace.Models.General.Constants.C_Routes_Default,
                                new
                                {
                                    controller = MVC.Provider.Name,
                                    action = MVC.Provider.ActionNames.SVSurveyEvaluatorDetail,
                                    ProviderPublicId = Model.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId,
                                    SurveyPublicId = Model.RelatedSurvey.RelatedSurvey.ParentSurveyPublicId,
                                    User = Model.RelatedSurvey.SurveyEvaluator
                                }))">Ver detalle</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

