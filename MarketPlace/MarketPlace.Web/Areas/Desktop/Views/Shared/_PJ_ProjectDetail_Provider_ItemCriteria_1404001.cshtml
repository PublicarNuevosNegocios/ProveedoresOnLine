@model Tuple<MarketPlace.Models.Project.ProjectViewModel, List<MarketPlace.Models.Project.EvaluationItemViewModel>>

@if (!Model.Item1.RenderScripts)
{
    //get current evaluation item
    MarketPlace.Models.Project.EvaluationItemViewModel oEvaluationItem = Model.Item2.
            DefaultIfEmpty(new MarketPlace.Models.Project.EvaluationItemViewModel(new ProveedoresOnLine.Company.Models.Util.GenericItemModel())).
            FirstOrDefault();

    //get experienceid to show
    List<int> lstExperienceId = Model.Item1.CurrentProjectProvider.GetInfoItems(oEvaluationItem.EvaluationItemId);

    //get experience sum
    decimal oExperienceSum = Model.Item1.CurrentProjectProvider.RelatedProvider.RelatedComercialInfo.
        Where(cm => cm.RelatedCommercialInfo.ItemType.ItemId == (int)MarketPlace.Models.General.enumCommercialType.Experience &&
                    lstExperienceId.Any(cmid => cm.RelatedCommercialInfo.ItemId == cmid)).
        Sum(cm => Convert.ToDecimal(cm.EX_ContractValue, System.Globalization.CultureInfo.CreateSpecificCulture("EN-us")));

    int oExperienceCount = Model.Item1.CurrentProjectProvider.RelatedProvider.RelatedComercialInfo.
        Where(cm => cm.RelatedCommercialInfo.ItemType.ItemId == (int)MarketPlace.Models.General.enumCommercialType.Experience &&
                    lstExperienceId.Any(cmid => cm.RelatedCommercialInfo.ItemId == cmid)).
        Count();

    <!--Item results-->
    <div>
        <ul>
            <li>
                <ul>
                    <li>
                        <span>Criterio</span>
                    </li>
                    <li>
                        <span>Unidad</span>
                    </li>
                    <li>
                        <span>Valor</span>
                    </li>
                    <li>
                        <span>Resultado</span>
                    </li>
                </ul>
            </li>
            <li>
                <ul>
                    <li>
                        <span>Total de experiencias</span>
                    </li>
                    <li>
                        <span>@oEvaluationItem.EvaluationItemUnitName</span>
                    </li>
                    <li>
                        <span>@oExperienceCount.ToString()</span>
                    </li>
                    <li>
                        @(Html.Partial(MVC.Desktop.Shared.Views._PJ_EvaluationItemResult, new Tuple<MarketPlace.Models.General.enumEvaluationItemUnitType, decimal, decimal>
                            (oEvaluationItem.EvaluationItemUnit,
                            oExperienceCount,
                            Model.Item1.ProjectExperienceQuantity == null ? 0 : Model.Item1.ProjectExperienceQuantity.Value)))
                    </li>
                </ul>
            </li>
            <li>
                <ul>
                    <li>
                        <span>Valor acumulado de experiencias</span>
                    </li>
                    <li>
                        <span>@oEvaluationItem.EvaluationItemUnitName</span>
                    </li>
                    <li>
                        <span>$@oExperienceSum.ToString("#,0.##", System.Globalization.CultureInfo.CreateSpecificCulture("EN-us")) @Model.Item1.ProjectCurrencyTypeName</span>
                    </li>
                    <li>
                        @(Html.Partial(MVC.Desktop.Shared.Views._PJ_EvaluationItemResult, new Tuple<MarketPlace.Models.General.enumEvaluationItemUnitType, decimal, decimal>
                            (oEvaluationItem.EvaluationItemUnit,
                            oExperienceSum,
                            Model.Item1.ProjectAmmount)))
                    </li>
                </ul>
            </li>
        </ul>
        <label class="POMPProviderVerDetalle">
            <a href="@(Url.RouteUrl
                (MarketPlace.Models.General.Constants.C_Routes_Default,
                new
                {
                    controller = MVC.Provider.Name,
                    action = MVC.Provider.ActionNames.CIExperiencesInfo,
                    ProviderPublicId = Model.Item1.CurrentProjectProvider.RelatedProvider.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId
                }))">Ver todas las experiencias</a>
        </label>
    </div>
    <!--Item desicion information-->
    <div class="POMPProviderDataWrapper">
        @Html.Partial(MVC.Desktop.Shared.Views._P_CI_ExperiencesInfo, Model.Item1.CurrentProjectProvider.RelatedProvider)
        <label class="POMPProviderVerDetalle">
            <a href="@(Url.RouteUrl
                (MarketPlace.Models.General.Constants.C_Routes_Default,
                new
                {
                    controller = MVC.Provider.Name,
                    action = MVC.Provider.ActionNames.CIExperiencesInfo,
                    ProviderPublicId = Model.Item1.CurrentProjectProvider.RelatedProvider.RelatedLiteProvider.RelatedProvider.RelatedCompany.CompanyPublicId
                }))">Ver todas las experiencias</a>
        </label>
    </div>
}
