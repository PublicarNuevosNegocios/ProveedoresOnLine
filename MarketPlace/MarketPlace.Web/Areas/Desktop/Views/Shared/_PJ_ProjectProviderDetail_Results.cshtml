@model MarketPlace.Models.Project.ProjectViewModel

@if (!Model.RenderScripts)
{
    string oAreaEvalStyle = string.Empty, oAreaEvalResult = string.Empty, oAreaEvalUnit = string.Empty;
    decimal oAreaRatting = Model.CurrentProjectProvider.GetRatting(Model.RelatedProjectConfig.CurrentEvaluationArea.EvaluationItemId);

    switch (Model.RelatedProjectConfig.CurrentEvaluationArea.EvaluationItemUnit)
    {
        case MarketPlace.Models.General.enumEvaluationItemUnitType.LooseWin:

            oAreaEvalUnit = "Pasa / No Pasa";

            if (oAreaRatting >= 100)
            {
                oAreaEvalResult = "Pasa";
                oAreaEvalStyle = "POMP_ProjectDetail_Win";
            }
            else
            {
                oAreaEvalResult = "No Pasa";
                oAreaEvalStyle = "POMP_ProjectDetail_Lose";
            }
            break;
        case MarketPlace.Models.General.enumEvaluationItemUnitType.Percent:

            oAreaEvalUnit = "Mínimo " + Model.RelatedProjectConfig.CurrentEvaluationArea.AprobalPercent.ToString("#,0.##") + "%";

            if (oAreaRatting >= Model.RelatedProjectConfig.CurrentEvaluationArea.AprobalPercent)
            {
                oAreaEvalResult = oAreaRatting.ToString("#,0.##") + " % Pasa";
                oAreaEvalStyle = "POMP_ProjectDetail_Win";
            }
            else
            {
                oAreaEvalResult = oAreaRatting.ToString("#,0.##") + " % No Pasa";
                oAreaEvalStyle = "POMP_ProjectDetail_Lose";
            }
            break;
        case MarketPlace.Models.General.enumEvaluationItemUnitType.Informative:

            oAreaEvalUnit = "Informativo";

            if (oAreaRatting >= 100)
            {
                oAreaEvalResult = "Pasa";
                oAreaEvalStyle = "POMP_ProjectDetail_Win";
            }
            else
            {
                oAreaEvalResult = "No Pasa";
                oAreaEvalStyle = "POMP_ProjectDetail_Lose";
            }
            break;
        default:
            break;
    }



    List<MarketPlace.Models.Project.EvaluationItemViewModel> oEvaluationCriteria = Model.RelatedProjectConfig.GetEvaluationCriteria();

    <div>
        <ul>
            <li>
                <ul>
                    <li>
                        <span>Criterio</span>
                    </li>
                    <li>
                        <span>Peso</span>
                    </li>
                    <li>
                        <span>Resultado</span>
                    </li>
                </ul>
            </li>
            @foreach (var oCriteria in oEvaluationCriteria)
            {
                string oEvalResult = string.Empty, oEvalUnit = string.Empty;
                decimal oRatting = Model.CurrentProjectProvider.GetRatting(oCriteria.EvaluationItemId);

                switch (oCriteria.EvaluationItemUnit)
                {
                    case MarketPlace.Models.General.enumEvaluationItemUnitType.LooseWin:

                        oEvalUnit = "Pasa / No Pasa";

                        if (oRatting >= 100)
                        {
                            oEvalResult = "Pasa";
                        }
                        else
                        {
                            oEvalResult = "No Pasa";
                        }
                        break;
                    case MarketPlace.Models.General.enumEvaluationItemUnitType.Percent:
                        oEvalUnit = oCriteria.EvaluationWeight.ToString("#,0.##") + " %";

                        oEvalResult = ((oRatting * oCriteria.EvaluationWeight) / 100).ToString("#,0.##") + " %";

                        break;
                    case MarketPlace.Models.General.enumEvaluationItemUnitType.Informative:

                        oEvalUnit = "Informativo";
                        if (oRatting >= 100)
                        {
                            oEvalResult = "Pasa";
                        }
                        else
                        {
                            oEvalResult = "No Pasa";
                        }

                        break;
                    default:
                        break;
                }

                <li>
                    <ul>
                        <li>
                            <span>@oCriteria.EvaluationItemName</span>
                        </li>
                        <li>
                            <span>@oEvalUnit</span>
                        </li>
                        <li>
                            <span>@oEvalResult</span>
                        </li>
                    </ul>
                </li>
            }
            <li class="@oAreaEvalStyle">
                <ul>
                    <li>
                        <span>Resultado @Model.RelatedProjectConfig.CurrentEvaluationArea.EvaluationItemName</span>
                    </li>
                    <li>
                        <span>@oAreaEvalUnit</span>
                    </li>
                    <li>
                        <span>@oAreaEvalResult</span>
                    </li>
                </ul>
            </li>
        </ul>

        <label class="POMPProviderVerDetalle">
            <a href="">Ver todas las experiencias</a>
        </label>
    </div>
}

