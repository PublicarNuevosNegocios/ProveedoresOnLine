@model MarketPlace.Models.Provider.ProviderViewModel
@{
    ViewBag.Title = "Proveedores OnLine - Consulta Individual";
    Model.RenderScripts = false;
}

<div class="container-fluid POMPTKDetailContainer">
    @if (Model.RelatedThidKnowledgeSearch != null && Model.RelatedThidKnowledgeSearch.ThirdKnowledgeResult != null && Model.RelatedThidKnowledgeSearch.ThirdKnowledgeResult.Count > 0 && Model.RelatedThidKnowledgeSearch.ThirdKnowledgeResult.Where(x => x != null).Select(x => x.IsSuccess).FirstOrDefault().ToString().CompareTo("True") == 0)
    {
        foreach (var item in Model.RelatedThidKnowledgeSearch.ThirdKnowledgeResult)
        {
            List<Tuple<string, List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel>>> Group = new List<Tuple<string, List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel>>>();
            List<string> Item1 = new List<string>();

            item.RelatedQueryBasicInfoModel.All(x =>
            {
                Item1.Add(x.DetailInfo.Where(y => y.ItemInfoType.ItemId == (int)MarketPlace.Models.General.enumThirdKnowledgeColls.GroupName).Select(y => y.Value).FirstOrDefault());
                return true;
            });
            Item1 = Item1.GroupBy(x => x).Select(grp => grp.First()).ToList();

            List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel> oItem2 = new List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel>();
            Tuple<string, List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel>> oTupleItem = new Tuple<string, List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel>>("", new List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel>());

            Item1.All(x =>
            {
                if (item.RelatedQueryBasicInfoModel.Where(td => td.DetailInfo.Any(inf => inf.Value == x)) != null)
                {
                    oItem2 = item.RelatedQueryBasicInfoModel.Where(td => td.DetailInfo.Any(inf => inf.Value == x)).Select(td => td).ToList();
                    oTupleItem = new Tuple<string, List<ProveedoresOnLine.ThirdKnowledge.Models.TDQueryInfoModel>>(x, oItem2);
                    Group.Add(oTupleItem);
                }
                return true;
            });

            foreach (var col in Group)
            {
                <div class="row">
                    <div class="col-sm-12 col-lg-12 POMPTKDetailTitle"><strong>@col.Item1</strong></div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-1 POMPProviderBoxInfo text-center"><strong>Prioridad</strong></div>
                    <div class="col-sm-1 POMPProviderBoxInfo text-center"><strong>Estado</strong></div>
                    <div class="col-sm-4 POMPProviderBoxInfo text-center"><strong>Nombre</strong></div>
                    <div class="col-sm-2 POMPProviderBoxInfo text-center"><strong>Identificación</strong></div>
                    <div class="col-sm-2 POMPProviderBoxInfo text-center"><strong>Alias</strong></div>
                </div>
                <br />
                foreach (var subItem in col.Item2)
                {
                    <div class="row POMPBorderbottom">
                        <div class="col-sm-1 POMPProviderBoxInfo text-center"><p>@subItem.Priority</p></div>
                        <div class="col-sm-1 POMPProviderBoxInfo text-center"><p>@(subItem.Status == "True" ? "Activo" : "Inactivo")</p></div>
                        <div class="col-sm-4 POMPProviderBoxInfo text-center"><p>@subItem.NameResult</p></div>
                        <div class="col-sm-2 POMPProviderBoxInfo text-center"><p>@subItem.IdentificationResult</p></div>
                        <div class="col-sm-2 POMPProviderBoxInfo text-center"><p>@subItem.Alias</p></div>
                        <div class="col-sm-2 POMPProviderBoxInfo text-center">
                            <p>
                                <a href="@(Url.RouteUrl
                                            (MarketPlace.Models.General.Constants.C_Routes_Default,
                                            new
                                            {
                                                controller = MVC.ThirdKnowledge.Name,
                                                action = MVC.ThirdKnowledge.ActionNames.TKDetailSingleSearch,
                                                QueryBasicPublicId = subItem.QueryBasicPublicId,
                                                ReturnUrl = Url.Action
                                                        (MVC.ThirdKnowledge.ActionNames.TKThirdKnowledgeDetail,
                                                        MVC.ThirdKnowledge.Name,
                                                        new
                                                        {
                                                            QueryPublicId = Model.RelatedThidKnowledgeSearch.ThirdKnowledgeResult.Where(x => x.QueryPublicId != null).Select(x => x.QueryPublicId).DefaultIfEmpty(string.Empty).FirstOrDefault(),
                                                            InitDate = Model.RelatedThidKnowledgeSearch.InitDate.ToString("yyyy-MM-dd"),
                                                            EndDate = Model.RelatedThidKnowledgeSearch.EndDate.ToString("yyyy-MM-dd"),
                                                        })
                                                }))">Ver Detalle</a>
                            </p>
                        </div>
                    </div>
                    <br />
                }
                <br />
                <br />
            }
        }
    }
    else
    {
        <div class="row">
            <div class="col-md-12 col-sm-12 text-center">
                @{
        if (Model.RelatedThidKnowledgeSearch.ThirdKnowledgeResult.Count > 0)
        {
            var obbkRQB = Model.RelatedThidKnowledgeSearch.ThirdKnowledgeResult.Where(x => x.RelatedQueryBasicInfoModel != null).FirstOrDefault().RelatedQueryBasicInfoModel.Where(i => i.DetailInfo != null).FirstOrDefault();
            <br /><br />
                    <label>LA BÚSQUEDA POR</label>
                    <br />
            if (@obbkRQB.DetailInfo.Where(x => x.ItemInfoType.ItemId == 301013).Select(y => y.Value).DefaultIfEmpty(String.Empty).FirstOrDefault().ToString().Length > 0)
            {
                <label class="POMPNoresultRequestText">Nombre:&nbsp;@obbkRQB.DetailInfo.Where(x => x.ItemInfoType.ItemId == 301013).Select(y => y.Value).DefaultIfEmpty(String.Empty).FirstOrDefault().ToString()</label>
            }
            if (@obbkRQB.DetailInfo.Where(x => x.ItemInfoType.ItemId == 301013).Select(y => y.Value).DefaultIfEmpty(String.Empty).FirstOrDefault().ToString().Length > 0 && @obbkRQB.DetailInfo.Where(x => x.ItemInfoType.ItemId == 301012).Select(y => y.Value).DefaultIfEmpty(String.Empty).FirstOrDefault().ToString().Length > 0)
            {
                <label class="POMPNoresultRequestText">&nbsp; / &nbsp;</label>
            }
            if (@obbkRQB.DetailInfo.Where(x => x.ItemInfoType.ItemId == 301012).Select(y => y.Value).DefaultIfEmpty(String.Empty).FirstOrDefault().ToString().Length > 0)
            {
                <label class="POMPNoresultRequestText">Identificación:&nbsp;@obbkRQB.DetailInfo.Where(x => x.ItemInfoType.ItemId == 301012).Select(y => y.Value).DefaultIfEmpty(String.Empty).FirstOrDefault().ToString()</label>
            }
            <br /><br />
                    <label class="POMPNoresultText">no arrojó coincidencias</label>
        }
        else
        {
            <br /><br />
                    <label>LA BÚSQUEDA</label>
                    <br />
                    <br />
                    <label class="POMPNoresultText">no arrojó coincidencias</label>
        }
                }
            </div>
        </div>

    }
</div>
<div class="row">
    <div class="col-sm-12 text-center">

        <nav>
            <ul class="pagination">
                <li>
                    <a href="#" aria-label="Anterior">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>               
                @{
                    for (int i = 0; i < Model.RelatedThidKnowledgeSearch.TotalPages; i++)
                    {
                        <li>
                            <a class="selected" href="javascript:Third_KnowledgeDetailSearch.Search({PageNumber:@(i)});">@(i + 1)</a>
                        </li>
                    }
                 }
                <li>
                    <a href="#" aria-label="Siguiente">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>

    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        Third_KnowledgeDetailSearch.Init({
            ObjectId: 'ThirdKnowledge',
        });
    });
</script>
