@model DocumentManagement.Models.Provider.ProviderFieldModel

@{
    //get value and id
    string strId = Model.FieldType + "-" + Model.RealtedField.FieldId + "-";
}

@if (!Model.RenderScripts)
{
    string strValue = string.Empty;
    DocumentManagement.Models.Provider.ProviderFormLegalTerms CurrentModel = null;
    if (Model.RealtedProviderInfo != null && Model.RealtedProviderInfo.Count > 0)
    {
        strId += Model.RealtedProviderInfo.FirstOrDefault().ProviderInfoId.ToString();
        strValue = Model.RealtedProviderInfo.FirstOrDefault().LargeValue;

        CurrentModel = new DocumentManagement.Models.Provider.ProviderFormLegalTerms
            (strValue,
            DocumentManagement.Models.General.InternalSettings.Instance
                    [Model.FieldType + "_" + Model.RealtedField.ProviderInfoType.ItemId + "_LegalText"].Value,
            Model.RealtedProviderInfo.FirstOrDefault().ProviderInfoId.ToString());
    }
    else
    {
        CurrentModel = new DocumentManagement.Models.Provider.ProviderFormLegalTerms
            (string.Empty,
            DocumentManagement.Models.General.InternalSettings.Instance
                    [Model.FieldType + "_" + Model.RealtedField.ProviderInfoType.ItemId + "_LegalText"].Value,
            string.Empty);
    }

    <div class="LegalTermsForm">
        <!--legal terms field-->
        <label class="labelLegalTerms">@Model.RealtedField.Name:</label>
        <div class="LegalTermsContent">
            <ul>
                <li class="TextForm">@Html.Raw(CurrentModel.Rsx.txtHeader)</li>
                <li><input class="CheckData" type="checkbox" id="@(strId)_CheckData" onchange="javascript:PF_LegalTermsChange('@(strId)');" @(Html.Raw(CurrentModel.data != null && CurrentModel.data.CheckData ? "checked='checked'" : string.Empty)) /><label>@Html.Raw(CurrentModel.Rsx.txtHeader)</label></li>
                <li><input class="CheckCommercial" type="checkbox" id="@(strId)_CheckCommercial" onchange="javascript:PF_LegalTermsChange('@(strId)');" @(Html.Raw(CurrentModel.data != null && CurrentModel.data.CheckCommercial ? "checked='checked'" : string.Empty)) /><label>@Html.Raw(CurrentModel.Rsx.txtCheckCommercial)</label></li>
                <li><input class="CheckRestrictiveList" type="checkbox" id="@(strId)_CheckRestrictiveList" onchange="javascript:PF_LegalTermsChange('@(strId)');" @(Html.Raw(CurrentModel.data != null && CurrentModel.data.CheckRestrictiveList ? "checked='checked'" : string.Empty)) /><label>@Html.Raw(CurrentModel.Rsx.txtCheckRestrictiveList)</label></li>
                <li class="DownloadTerms">@Html.Raw(CurrentModel.Rsx.txtFooter)</li>
            </ul>
        </div>
        <div style="display:none;">
            <input type="hidden" id="@(strId)" name="@(strId)" value="@(strValue)" />
        </div>
    </div>
}

