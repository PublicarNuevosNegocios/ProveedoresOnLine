@model DocumentManagement.Models.Provider.ProviderFieldModel

@{
    //get grid id
    string strId = Model.FieldType + "-" + Model.RealtedField.FieldId;
    string oProviderPublicId = Model.ProviderPublicId;
    bool IsModified = false;
}

@if (!Model.RenderScripts)
{
    <div>
        <!--Partners field-->
        <label class="labelFieldPartners">@Model.RealtedField.Name</label>
        <div id="@strId"></div>
    </div>

    <div style="display:none;">
        <input type="hidden" name="@(strId)-" id="@(strId)-" />
    </div>

    <div id="dialog" style="display:none;">

        <!--partner field dialogs-->
        <div id="@(strId)_Create" class="partnerDialog" title="@Model.RealtedField.Name">
            <ul>
                <li>
                    <span>Identificación:</span> <input type="text" id="@(strId)_IdentificationNumber" />
                </li>
                <li>
                    <span>Nombres y apellidos:</span> <input type="text" id="@(strId)_FullName" />
                </li>
                <li>
                    <span>Porcetaje de participación (%):</span> <input type="text" id="@(strId)_ParticipationPercent" />
                </li>
                @if (DocumentManagement.Models.General.SessionModel.CurrentLoginUser != null)
                {
                    IsModified = true;
                    <li>
                        <input style="display:none" type="text" id="@(Model.ProviderPublicId)_ProviderPublicId" />
                    </li>
                }
                <li>
                    <a class="DMButtonsDialog" href="javascript:PF_PartnerFormObject.Create()">Guardar</a>
                </li>
            </ul>
        </div>

        <div id="@(strId)_Delete" title="Edición de @Model.RealtedField.Name">
            <div>Esta seguro de borrar @Model.RealtedField.Name?</div>
        </div>
    </div>
}
else
{

    List<DocumentManagement.Provider.Models.Provider.ChangesControlModel> oCurrentChanges = new List<DocumentManagement.Provider.Models.Provider.ChangesControlModel>();
    oCurrentChanges = DocumentManagement.Provider.Controller.Provider.ChangesControlGetByProviderPublicId(Model.ProviderPublicId);
    string oGridData = string.Empty;
    if (Model.RealtedProviderInfo != null)
    {
        oGridData = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(
            Model.
            RealtedProviderInfo.
            Where(x => !string.IsNullOrEmpty(x.LargeValue)).
            Select
            (x => new DocumentManagement.Models.Provider.
                ProviderFormPartners(x.LargeValue, x.ProviderInfoId.ToString(), oCurrentChanges.Any(y => y.ProviderInfoId == x.ProviderInfoId &&
                                    DocumentManagement.Models.General.SessionModel.CurrentLoginUser != null) ? true : false)).
                                    Where(x => x.IsDelete == false).ToList());
    }

    <script type="text/javascript">
        var vGridData = @(Html.Raw(oGridData));
        @if (DocumentManagement.Models.General.SessionModel.CurrentLoginUser != null)
         {
             IsModified = true;
        }
        $(document).ready(function () {
            //start grid
            PF_PartnerFormObject.Init({
                DivId:'@strId',
                PartnerData:vGridData,
                IsModified: '@IsModified',
                ProviderPublicId:'@oProviderPublicId',
            });

            PF_PartnerFormObject.RenderAsync();
        });
    </script>

}

