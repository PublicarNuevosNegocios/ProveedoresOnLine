@model DocumentManagement.Models.Provider.ProviderFormModel

@{
    ViewBag.Title = "Proveedores";
    Layout = "~/Views/Shared/_LayoutProviderForm.cshtml";

    Model.RenderScripts = false;

    string sfLink = "https://na2.salesforce.com/" + Model.RealtedProvider.
        RelatedProviderCustomerInfo.
        Where(x => x.ProviderInfoType.ItemId == 403).
        Select(x => x.Value).
        DefaultIfEmpty(string.Empty).
        FirstOrDefault();
}

<div>
    <div class="DMLogIntopWrapper">
        <img class="DMProviderlogo" src="@Model.RealtedForm.Logo" alt="" />
        <label>SISTEMA DE REGISTRO DE PROVEEDORES DE @Model.RealtedCustomer.Name.ToUpper()</label>
        <img class="DMPOLogo" src="/Content/Images/LogoPOLogInAlpha.png" alt="" />
    </div>

    <div class="divAdminProvider">
        <form class="FormProvider"
              method="post"
              action="@(Server.UrlDecode(Url.Action(MVC.ProviderForm.ActionNames.UpsertAdminProvider,
                            MVC.ProviderForm.Name,
                            new
                            {
                                ProviderPublicId = Model.RealtedProvider.ProviderPublicId,
                                FormPublicId = Model.RealtedForm.FormPublicId,
                            })))">
            <ul class="ulAdminProvider">
                <li class="TitleAdminProvider">
                    <label>ADMINISTRAR PROVEEDOR</label>
                </li>
                <li>
                    <a href="@(sfLink)">Link salesforce</a>
                </li>
                <li>
                    <label>Estado del proveedor:</label>
                    <select id="selProviderStatus" name="selProviderStatus">
                        @{
                            int oProviderStatus = Model.
                                RealtedProvider.
                                RelatedProviderCustomerInfo.
                                Where(x => x.ProviderInfoType.ItemId == 401).
                                Select(x => Convert.ToInt32(x.Value)).
                                DefaultIfEmpty(0).
                                FirstOrDefault();
                            foreach (var Item in Model.ProviderOptions[0].Where(x => x.CatalogId == 2).OrderBy(x => x.ItemId))
                            {
                                if (Item.ItemId == oProviderStatus)
                                {
                                    <option value="@Item.ItemId" selected="selected">@Item.ItemName</option>
                                }
                                else
                                {
                                    <option value="@Item.ItemId">@Item.ItemName</option>
                                }
                            }
                        }
                    </select>
                </li>
                <li>
                    <label>Nota:</label>
                    <textarea id="taNoteText" name="taNoteText"></textarea>
                </li>
                <li class="liButtonSave">
                    <input type="submit" value="Guardar" />
                </li>
                <li>
                    <span>Notas del proveedor:</span>
                    <div id="GridNotes"></div>
                </li>
            </ul>
            <div style="display:none;">
                <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
            </div>
        </form>
    </div>

    <div class="DMStepsBottomWrapper">
        <img class="DMLogPublicar" src="~/Content/Images/LogoPublicarFooterBlack.png" alt="" />
        <label class="DMPublicarCopyright">Publicar publicidad y soluciones multimedia - Proveedores Online &copy; 2014 - 2015</label>
    </div>
</div>

@{
    Model.RenderScripts = true;
}

@section inlinescripts
{
    @{
        string oNotesData = string.Empty;
        if (Model.RealtedProvider != null)
        {
            oNotesData = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                Serialize(
                    Model.
                    RealtedProvider.
                    RelatedProviderCustomerInfo.
                    Where(x => x.ProviderInfoType.ItemId == 402).
                    Select(x => new 
                    {
                        LargeValue=x.LargeValue,
                        CreateDate=x.CreateDate.ToString("yyyy-MM-dd HH:mm"),
                    }).
                    ToList());
        }
    }
    <script type="text/javascript">
        var vNotesData = @(Html.Raw(oNotesData))
        $(document).ready(function () {
            //start grid
            AP_ProviderNotesObject.Init({
                DivId: 'GridNotes',
                NotesData: vNotesData,
            });

            AP_ProviderNotesObject.RenderAsync();
        });
    </script>
}
